// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade_pb.proto

package com.mock.trading.pb;

public final class TradePb {
  private TradePb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum macd_cross_pbe
      implements com.google.protobuf.ProtocolMessageEnum {
    cross_above(0, 1),
    cross_below(1, 2),
    cross_both(2, 3),
    none(3, 4),
    ;
    
    public static final int cross_above_VALUE = 1;
    public static final int cross_below_VALUE = 2;
    public static final int cross_both_VALUE = 3;
    public static final int none_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static macd_cross_pbe valueOf(int value) {
      switch (value) {
        case 1: return cross_above;
        case 2: return cross_below;
        case 3: return cross_both;
        case 4: return none;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<macd_cross_pbe>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<macd_cross_pbe>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<macd_cross_pbe>() {
            public macd_cross_pbe findValueByNumber(int number) {
              return macd_cross_pbe.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final macd_cross_pbe[] VALUES = {
      cross_above, cross_below, cross_both, none, 
    };
    
    public static macd_cross_pbe valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private macd_cross_pbe(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.elvenland.trading.pb.macd_cross_pbe)
  }
  
  public interface trade_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 ts = 1;
    boolean hasTs();
    long getTs();
    
    // optional string orderid = 2;
    boolean hasOrderid();
    String getOrderid();
    
    // optional string account = 3;
    boolean hasAccount();
    String getAccount();
    
    // optional string side = 4;
    boolean hasSide();
    String getSide();
    
    // optional int32 size = 5;
    boolean hasSize();
    int getSize();
    
    // optional string symbol = 6;
    boolean hasSymbol();
    String getSymbol();
    
    // optional string venue = 7;
    boolean hasVenue();
    String getVenue();
    
    // optional double price = 8;
    boolean hasPrice();
    double getPrice();
    
    // optional int32 position = 9;
    boolean hasPosition();
    int getPosition();
    
    // optional double pl = 10;
    boolean hasPl();
    double getPl();
    
    // optional uint64 seq = 11;
    boolean hasSeq();
    long getSeq();
    
    // optional double avgprice = 12;
    boolean hasAvgprice();
    double getAvgprice();
    
    // optional int32 fillqty = 13;
    boolean hasFillqty();
    int getFillqty();
    
    // optional int32 leaveqty = 14;
    boolean hasLeaveqty();
    int getLeaveqty();
  }
  public static final class trade_pb extends
      com.google.protobuf.GeneratedMessage
      implements trade_pbOrBuilder {
    // Use trade_pb.newBuilder() to construct.
    private trade_pb(Builder builder) {
      super(builder);
    }
    private trade_pb(boolean noInit) {}
    
    private static final trade_pb defaultInstance;
    public static trade_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public trade_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_trade_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_trade_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 ts = 1;
    public static final int TS_FIELD_NUMBER = 1;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional string orderid = 2;
    public static final int ORDERID_FIELD_NUMBER = 2;
    private java.lang.Object orderid_;
    public boolean hasOrderid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getOrderid() {
      java.lang.Object ref = orderid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          orderid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOrderidBytes() {
      java.lang.Object ref = orderid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        orderid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string account = 3;
    public static final int ACCOUNT_FIELD_NUMBER = 3;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string side = 4;
    public static final int SIDE_FIELD_NUMBER = 4;
    private java.lang.Object side_;
    public boolean hasSide() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getSide() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          side_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSideBytes() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        side_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 size = 5;
    public static final int SIZE_FIELD_NUMBER = 5;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSize() {
      return size_;
    }
    
    // optional string symbol = 6;
    public static final int SYMBOL_FIELD_NUMBER = 6;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string venue = 7;
    public static final int VENUE_FIELD_NUMBER = 7;
    private java.lang.Object venue_;
    public boolean hasVenue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getVenue() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          venue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getVenueBytes() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        venue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double price = 8;
    public static final int PRICE_FIELD_NUMBER = 8;
    private double price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getPrice() {
      return price_;
    }
    
    // optional int32 position = 9;
    public static final int POSITION_FIELD_NUMBER = 9;
    private int position_;
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPosition() {
      return position_;
    }
    
    // optional double pl = 10;
    public static final int PL_FIELD_NUMBER = 10;
    private double pl_;
    public boolean hasPl() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public double getPl() {
      return pl_;
    }
    
    // optional uint64 seq = 11;
    public static final int SEQ_FIELD_NUMBER = 11;
    private long seq_;
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public long getSeq() {
      return seq_;
    }
    
    // optional double avgprice = 12;
    public static final int AVGPRICE_FIELD_NUMBER = 12;
    private double avgprice_;
    public boolean hasAvgprice() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getAvgprice() {
      return avgprice_;
    }
    
    // optional int32 fillqty = 13;
    public static final int FILLQTY_FIELD_NUMBER = 13;
    private int fillqty_;
    public boolean hasFillqty() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getFillqty() {
      return fillqty_;
    }
    
    // optional int32 leaveqty = 14;
    public static final int LEAVEQTY_FIELD_NUMBER = 14;
    private int leaveqty_;
    public boolean hasLeaveqty() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getLeaveqty() {
      return leaveqty_;
    }
    
    private void initFields() {
      ts_ = 0L;
      orderid_ = "";
      account_ = "";
      side_ = "";
      size_ = 0;
      symbol_ = "";
      venue_ = "";
      price_ = 0D;
      position_ = 0;
      pl_ = 0D;
      seq_ = 0L;
      avgprice_ = 0D;
      fillqty_ = 0;
      leaveqty_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, ts_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOrderidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAccountBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSideBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getVenueBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, price_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, position_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, pl_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, seq_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, avgprice_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, fillqty_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, leaveqty_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, ts_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOrderidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAccountBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSideBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getVenueBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, price_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, position_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, pl_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, seq_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, avgprice_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, fillqty_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, leaveqty_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.trade_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.trade_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.trade_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_trade_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_trade_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.trade_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        side_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        venue_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pl_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        seq_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        avgprice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        fillqty_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        leaveqty_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.trade_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.trade_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.trade_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.trade_pb build() {
        com.mock.trading.pb.TradePb.trade_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.trade_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.trade_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.trade_pb buildPartial() {
        com.mock.trading.pb.TradePb.trade_pb result = new com.mock.trading.pb.TradePb.trade_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderid_ = orderid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.venue_ = venue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pl_ = pl_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.avgprice_ = avgprice_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fillqty_ = fillqty_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.leaveqty_ = leaveqty_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.trade_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.trade_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.trade_pb other) {
        if (other == com.mock.trading.pb.TradePb.trade_pb.getDefaultInstance()) return this;
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasOrderid()) {
          setOrderid(other.getOrderid());
        }
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasVenue()) {
          setVenue(other.getVenue());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasPl()) {
          setPl(other.getPl());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasAvgprice()) {
          setAvgprice(other.getAvgprice());
        }
        if (other.hasFillqty()) {
          setFillqty(other.getFillqty());
        }
        if (other.hasLeaveqty()) {
          setLeaveqty(other.getLeaveqty());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ts_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              orderid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              account_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              side_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              size_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              symbol_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              venue_ = input.readBytes();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              price_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              position_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              pl_ = input.readDouble();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              seq_ = input.readUInt64();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              avgprice_ = input.readDouble();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              fillqty_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              leaveqty_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 ts = 1;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000001;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string orderid = 2;
      private java.lang.Object orderid_ = "";
      public boolean hasOrderid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getOrderid() {
        java.lang.Object ref = orderid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          orderid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOrderid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderid_ = getDefaultInstance().getOrderid();
        onChanged();
        return this;
      }
      void setOrderid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
      }
      
      // optional string account = 3;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        account_ = value;
        onChanged();
      }
      
      // optional string side = 4;
      private java.lang.Object side_ = "";
      public boolean hasSide() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getSide() {
        java.lang.Object ref = side_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          side_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSide(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        side_ = value;
        onChanged();
        return this;
      }
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000008);
        side_ = getDefaultInstance().getSide();
        onChanged();
        return this;
      }
      void setSide(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        side_ = value;
        onChanged();
      }
      
      // optional int32 size = 5;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000010;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // optional string symbol = 6;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000020);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
      }
      
      // optional string venue = 7;
      private java.lang.Object venue_ = "";
      public boolean hasVenue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getVenue() {
        java.lang.Object ref = venue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          venue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVenue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        venue_ = value;
        onChanged();
        return this;
      }
      public Builder clearVenue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        venue_ = getDefaultInstance().getVenue();
        onChanged();
        return this;
      }
      void setVenue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        venue_ = value;
        onChanged();
      }
      
      // optional double price = 8;
      private double price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getPrice() {
        return price_;
      }
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000080;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 position = 9;
      private int position_ ;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getPosition() {
        return position_;
      }
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000100;
        position_ = value;
        onChanged();
        return this;
      }
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000100);
        position_ = 0;
        onChanged();
        return this;
      }
      
      // optional double pl = 10;
      private double pl_ ;
      public boolean hasPl() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public double getPl() {
        return pl_;
      }
      public Builder setPl(double value) {
        bitField0_ |= 0x00000200;
        pl_ = value;
        onChanged();
        return this;
      }
      public Builder clearPl() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pl_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint64 seq = 11;
      private long seq_ ;
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public long getSeq() {
        return seq_;
      }
      public Builder setSeq(long value) {
        bitField0_ |= 0x00000400;
        seq_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000400);
        seq_ = 0L;
        onChanged();
        return this;
      }
      
      // optional double avgprice = 12;
      private double avgprice_ ;
      public boolean hasAvgprice() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getAvgprice() {
        return avgprice_;
      }
      public Builder setAvgprice(double value) {
        bitField0_ |= 0x00000800;
        avgprice_ = value;
        onChanged();
        return this;
      }
      public Builder clearAvgprice() {
        bitField0_ = (bitField0_ & ~0x00000800);
        avgprice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 fillqty = 13;
      private int fillqty_ ;
      public boolean hasFillqty() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getFillqty() {
        return fillqty_;
      }
      public Builder setFillqty(int value) {
        bitField0_ |= 0x00001000;
        fillqty_ = value;
        onChanged();
        return this;
      }
      public Builder clearFillqty() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fillqty_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 leaveqty = 14;
      private int leaveqty_ ;
      public boolean hasLeaveqty() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getLeaveqty() {
        return leaveqty_;
      }
      public Builder setLeaveqty(int value) {
        bitField0_ |= 0x00002000;
        leaveqty_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeaveqty() {
        bitField0_ = (bitField0_ & ~0x00002000);
        leaveqty_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.trade_pb)
    }
    
    static {
      defaultInstance = new trade_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.trade_pb)
  }
  
  public interface cancel_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 seq = 1;
    boolean hasSeq();
    long getSeq();
    
    // optional uint64 orderid = 2;
    boolean hasOrderid();
    long getOrderid();
    
    // optional string orderref = 3;
    boolean hasOrderref();
    String getOrderref();
    
    // optional uint64 ts = 4;
    boolean hasTs();
    long getTs();
    
    // optional string account = 5;
    boolean hasAccount();
    String getAccount();
    
    // optional string side = 6;
    boolean hasSide();
    String getSide();
    
    // optional uint32 size = 7;
    boolean hasSize();
    int getSize();
    
    // optional string symbol = 8;
    boolean hasSymbol();
    String getSymbol();
  }
  public static final class cancel_pb extends
      com.google.protobuf.GeneratedMessage
      implements cancel_pbOrBuilder {
    // Use cancel_pb.newBuilder() to construct.
    private cancel_pb(Builder builder) {
      super(builder);
    }
    private cancel_pb(boolean noInit) {}
    
    private static final cancel_pb defaultInstance;
    public static cancel_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public cancel_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_cancel_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_cancel_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 seq = 1;
    public static final int SEQ_FIELD_NUMBER = 1;
    private long seq_;
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSeq() {
      return seq_;
    }
    
    // optional uint64 orderid = 2;
    public static final int ORDERID_FIELD_NUMBER = 2;
    private long orderid_;
    public boolean hasOrderid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getOrderid() {
      return orderid_;
    }
    
    // optional string orderref = 3;
    public static final int ORDERREF_FIELD_NUMBER = 3;
    private java.lang.Object orderref_;
    public boolean hasOrderref() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getOrderref() {
      java.lang.Object ref = orderref_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          orderref_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOrderrefBytes() {
      java.lang.Object ref = orderref_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        orderref_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 ts = 4;
    public static final int TS_FIELD_NUMBER = 4;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional string account = 5;
    public static final int ACCOUNT_FIELD_NUMBER = 5;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string side = 6;
    public static final int SIDE_FIELD_NUMBER = 6;
    private java.lang.Object side_;
    public boolean hasSide() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSide() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          side_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSideBytes() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        side_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 size = 7;
    public static final int SIZE_FIELD_NUMBER = 7;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getSize() {
      return size_;
    }
    
    // optional string symbol = 8;
    public static final int SYMBOL_FIELD_NUMBER = 8;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      seq_ = 0L;
      orderid_ = 0L;
      orderref_ = "";
      ts_ = 0L;
      account_ = "";
      side_ = "";
      size_ = 0;
      symbol_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, orderid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOrderrefBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, ts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getAccountBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSideBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, size_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getSymbolBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, orderid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOrderrefBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, ts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAccountBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSideBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, size_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSymbolBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.cancel_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.cancel_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.cancel_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_cancel_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_cancel_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.cancel_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        seq_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        orderref_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        side_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.cancel_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.cancel_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.cancel_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.cancel_pb build() {
        com.mock.trading.pb.TradePb.cancel_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.cancel_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.cancel_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.cancel_pb buildPartial() {
        com.mock.trading.pb.TradePb.cancel_pb result = new com.mock.trading.pb.TradePb.cancel_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderid_ = orderid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orderref_ = orderref_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.symbol_ = symbol_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.cancel_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.cancel_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.cancel_pb other) {
        if (other == com.mock.trading.pb.TradePb.cancel_pb.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasOrderid()) {
          setOrderid(other.getOrderid());
        }
        if (other.hasOrderref()) {
          setOrderref(other.getOrderref());
        }
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderid_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              orderref_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ts_ = input.readUInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              account_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              side_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              size_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              symbol_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 seq = 1;
      private long seq_ ;
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSeq() {
        return seq_;
      }
      public Builder setSeq(long value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 orderid = 2;
      private long orderid_ ;
      public boolean hasOrderid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getOrderid() {
        return orderid_;
      }
      public Builder setOrderid(long value) {
        bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string orderref = 3;
      private java.lang.Object orderref_ = "";
      public boolean hasOrderref() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getOrderref() {
        java.lang.Object ref = orderref_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          orderref_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOrderref(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orderref_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderref() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orderref_ = getDefaultInstance().getOrderref();
        onChanged();
        return this;
      }
      void setOrderref(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        orderref_ = value;
        onChanged();
      }
      
      // optional uint64 ts = 4;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000008;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string account = 5;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        account_ = value;
        onChanged();
      }
      
      // optional string side = 6;
      private java.lang.Object side_ = "";
      public boolean hasSide() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getSide() {
        java.lang.Object ref = side_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          side_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSide(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        side_ = value;
        onChanged();
        return this;
      }
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000020);
        side_ = getDefaultInstance().getSide();
        onChanged();
        return this;
      }
      void setSide(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        side_ = value;
        onChanged();
      }
      
      // optional uint32 size = 7;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000040;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // optional string symbol = 8;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000080);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        symbol_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.cancel_pb)
    }
    
    static {
      defaultInstance = new cancel_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.cancel_pb)
  }
  
  public interface order_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 seq = 1;
    boolean hasSeq();
    long getSeq();
    
    // optional uint64 orderid = 2;
    boolean hasOrderid();
    long getOrderid();
    
    // optional string orderref = 3;
    boolean hasOrderref();
    String getOrderref();
    
    // optional uint64 ts = 4;
    boolean hasTs();
    long getTs();
    
    // optional string symbol = 5;
    boolean hasSymbol();
    String getSymbol();
    
    // optional string account = 6;
    boolean hasAccount();
    String getAccount();
    
    // optional string side = 7;
    boolean hasSide();
    String getSide();
    
    // optional uint32 size = 8;
    boolean hasSize();
    int getSize();
    
    // optional string venue = 9;
    boolean hasVenue();
    String getVenue();
    
    // optional double price = 10;
    boolean hasPrice();
    double getPrice();
    
    // optional string locateid = 11;
    boolean hasLocateid();
    String getLocateid();
    
    // optional string type = 12;
    boolean hasType();
    String getType();
    
    // optional double stoprice = 13;
    boolean hasStoprice();
    double getStoprice();
    
    // optional string tif = 14;
    boolean hasTif();
    String getTif();
  }
  public static final class order_pb extends
      com.google.protobuf.GeneratedMessage
      implements order_pbOrBuilder {
    // Use order_pb.newBuilder() to construct.
    private order_pb(Builder builder) {
      super(builder);
    }
    private order_pb(boolean noInit) {}
    
    private static final order_pb defaultInstance;
    public static order_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public order_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_order_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_order_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 seq = 1;
    public static final int SEQ_FIELD_NUMBER = 1;
    private long seq_;
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSeq() {
      return seq_;
    }
    
    // optional uint64 orderid = 2;
    public static final int ORDERID_FIELD_NUMBER = 2;
    private long orderid_;
    public boolean hasOrderid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getOrderid() {
      return orderid_;
    }
    
    // optional string orderref = 3;
    public static final int ORDERREF_FIELD_NUMBER = 3;
    private java.lang.Object orderref_;
    public boolean hasOrderref() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getOrderref() {
      java.lang.Object ref = orderref_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          orderref_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOrderrefBytes() {
      java.lang.Object ref = orderref_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        orderref_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 ts = 4;
    public static final int TS_FIELD_NUMBER = 4;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional string symbol = 5;
    public static final int SYMBOL_FIELD_NUMBER = 5;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string account = 6;
    public static final int ACCOUNT_FIELD_NUMBER = 6;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string side = 7;
    public static final int SIDE_FIELD_NUMBER = 7;
    private java.lang.Object side_;
    public boolean hasSide() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getSide() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          side_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSideBytes() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        side_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 size = 8;
    public static final int SIZE_FIELD_NUMBER = 8;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getSize() {
      return size_;
    }
    
    // optional string venue = 9;
    public static final int VENUE_FIELD_NUMBER = 9;
    private java.lang.Object venue_;
    public boolean hasVenue() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getVenue() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          venue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getVenueBytes() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        venue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double price = 10;
    public static final int PRICE_FIELD_NUMBER = 10;
    private double price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public double getPrice() {
      return price_;
    }
    
    // optional string locateid = 11;
    public static final int LOCATEID_FIELD_NUMBER = 11;
    private java.lang.Object locateid_;
    public boolean hasLocateid() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getLocateid() {
      java.lang.Object ref = locateid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          locateid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLocateidBytes() {
      java.lang.Object ref = locateid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        locateid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string type = 12;
    public static final int TYPE_FIELD_NUMBER = 12;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double stoprice = 13;
    public static final int STOPRICE_FIELD_NUMBER = 13;
    private double stoprice_;
    public boolean hasStoprice() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public double getStoprice() {
      return stoprice_;
    }
    
    // optional string tif = 14;
    public static final int TIF_FIELD_NUMBER = 14;
    private java.lang.Object tif_;
    public boolean hasTif() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getTif() {
      java.lang.Object ref = tif_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tif_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTifBytes() {
      java.lang.Object ref = tif_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tif_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      seq_ = 0L;
      orderid_ = 0L;
      orderref_ = "";
      ts_ = 0L;
      symbol_ = "";
      account_ = "";
      side_ = "";
      size_ = 0;
      venue_ = "";
      price_ = 0D;
      locateid_ = "";
      type_ = "";
      stoprice_ = 0D;
      tif_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, orderid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOrderrefBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, ts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getAccountBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getSideBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, size_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getVenueBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, price_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getLocateidBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getTypeBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, stoprice_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getTifBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seq_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, orderid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOrderrefBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, ts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getAccountBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getSideBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, size_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getVenueBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, price_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getLocateidBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getTypeBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, stoprice_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getTifBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.order_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.order_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.order_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.order_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_order_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_order_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.order_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        seq_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        orderref_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        side_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        venue_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        locateid_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        stoprice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        tif_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.order_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.order_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.order_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.order_pb build() {
        com.mock.trading.pb.TradePb.order_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.order_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.order_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.order_pb buildPartial() {
        com.mock.trading.pb.TradePb.order_pb result = new com.mock.trading.pb.TradePb.order_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderid_ = orderid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orderref_ = orderref_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.venue_ = venue_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.locateid_ = locateid_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.stoprice_ = stoprice_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tif_ = tif_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.order_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.order_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.order_pb other) {
        if (other == com.mock.trading.pb.TradePb.order_pb.getDefaultInstance()) return this;
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasOrderid()) {
          setOrderid(other.getOrderid());
        }
        if (other.hasOrderref()) {
          setOrderref(other.getOrderref());
        }
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasVenue()) {
          setVenue(other.getVenue());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasLocateid()) {
          setLocateid(other.getLocateid());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStoprice()) {
          setStoprice(other.getStoprice());
        }
        if (other.hasTif()) {
          setTif(other.getTif());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seq_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderid_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              orderref_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ts_ = input.readUInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              symbol_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              account_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              side_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              size_ = input.readUInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              venue_ = input.readBytes();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              price_ = input.readDouble();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              locateid_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              type_ = input.readBytes();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              stoprice_ = input.readDouble();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              tif_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 seq = 1;
      private long seq_ ;
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSeq() {
        return seq_;
      }
      public Builder setSeq(long value) {
        bitField0_ |= 0x00000001;
        seq_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seq_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 orderid = 2;
      private long orderid_ ;
      public boolean hasOrderid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getOrderid() {
        return orderid_;
      }
      public Builder setOrderid(long value) {
        bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string orderref = 3;
      private java.lang.Object orderref_ = "";
      public boolean hasOrderref() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getOrderref() {
        java.lang.Object ref = orderref_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          orderref_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOrderref(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orderref_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderref() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orderref_ = getDefaultInstance().getOrderref();
        onChanged();
        return this;
      }
      void setOrderref(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        orderref_ = value;
        onChanged();
      }
      
      // optional uint64 ts = 4;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000008;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string symbol = 5;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000010);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        symbol_ = value;
        onChanged();
      }
      
      // optional string account = 6;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        account_ = value;
        onChanged();
      }
      
      // optional string side = 7;
      private java.lang.Object side_ = "";
      public boolean hasSide() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getSide() {
        java.lang.Object ref = side_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          side_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSide(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        side_ = value;
        onChanged();
        return this;
      }
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000040);
        side_ = getDefaultInstance().getSide();
        onChanged();
        return this;
      }
      void setSide(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        side_ = value;
        onChanged();
      }
      
      // optional uint32 size = 8;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000080;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // optional string venue = 9;
      private java.lang.Object venue_ = "";
      public boolean hasVenue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getVenue() {
        java.lang.Object ref = venue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          venue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVenue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        venue_ = value;
        onChanged();
        return this;
      }
      public Builder clearVenue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        venue_ = getDefaultInstance().getVenue();
        onChanged();
        return this;
      }
      void setVenue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        venue_ = value;
        onChanged();
      }
      
      // optional double price = 10;
      private double price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public double getPrice() {
        return price_;
      }
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000200;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000200);
        price_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string locateid = 11;
      private java.lang.Object locateid_ = "";
      public boolean hasLocateid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getLocateid() {
        java.lang.Object ref = locateid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          locateid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLocateid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        locateid_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocateid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        locateid_ = getDefaultInstance().getLocateid();
        onChanged();
        return this;
      }
      void setLocateid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        locateid_ = value;
        onChanged();
      }
      
      // optional string type = 12;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        type_ = value;
        onChanged();
      }
      
      // optional double stoprice = 13;
      private double stoprice_ ;
      public boolean hasStoprice() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public double getStoprice() {
        return stoprice_;
      }
      public Builder setStoprice(double value) {
        bitField0_ |= 0x00001000;
        stoprice_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoprice() {
        bitField0_ = (bitField0_ & ~0x00001000);
        stoprice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string tif = 14;
      private java.lang.Object tif_ = "";
      public boolean hasTif() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getTif() {
        java.lang.Object ref = tif_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tif_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTif(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        tif_ = value;
        onChanged();
        return this;
      }
      public Builder clearTif() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tif_ = getDefaultInstance().getTif();
        onChanged();
        return this;
      }
      void setTif(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        tif_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.order_pb)
    }
    
    static {
      defaultInstance = new order_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.order_pb)
  }
  
  public interface tick_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string symbol = 1;
    boolean hasSymbol();
    String getSymbol();
    
    // optional uint32 index = 2;
    boolean hasIndex();
    int getIndex();
    
    // optional uint64 ts = 3;
    boolean hasTs();
    long getTs();
    
    // optional string type = 4;
    boolean hasType();
    String getType();
    
    // optional float bid = 5;
    boolean hasBid();
    float getBid();
    
    // optional float ask = 6;
    boolean hasAsk();
    float getAsk();
    
    // optional uint32 bidsize = 7;
    boolean hasBidsize();
    int getBidsize();
    
    // optional uint32 asksize = 8;
    boolean hasAsksize();
    int getAsksize();
    
    // optional string exchange = 9;
    boolean hasExchange();
    String getExchange();
    
    // optional string change = 10;
    boolean hasChange();
    String getChange();
  }
  public static final class tick_pb extends
      com.google.protobuf.GeneratedMessage
      implements tick_pbOrBuilder {
    // Use tick_pb.newBuilder() to construct.
    private tick_pb(Builder builder) {
      super(builder);
    }
    private tick_pb(boolean noInit) {}
    
    private static final tick_pb defaultInstance;
    public static tick_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public tick_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_tick_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_tick_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string symbol = 1;
    public static final int SYMBOL_FIELD_NUMBER = 1;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getIndex() {
      return index_;
    }
    
    // optional uint64 ts = 3;
    public static final int TS_FIELD_NUMBER = 3;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional string type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional float bid = 5;
    public static final int BID_FIELD_NUMBER = 5;
    private float bid_;
    public boolean hasBid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getBid() {
      return bid_;
    }
    
    // optional float ask = 6;
    public static final int ASK_FIELD_NUMBER = 6;
    private float ask_;
    public boolean hasAsk() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public float getAsk() {
      return ask_;
    }
    
    // optional uint32 bidsize = 7;
    public static final int BIDSIZE_FIELD_NUMBER = 7;
    private int bidsize_;
    public boolean hasBidsize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getBidsize() {
      return bidsize_;
    }
    
    // optional uint32 asksize = 8;
    public static final int ASKSIZE_FIELD_NUMBER = 8;
    private int asksize_;
    public boolean hasAsksize() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getAsksize() {
      return asksize_;
    }
    
    // optional string exchange = 9;
    public static final int EXCHANGE_FIELD_NUMBER = 9;
    private java.lang.Object exchange_;
    public boolean hasExchange() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getExchange() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exchange_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string change = 10;
    public static final int CHANGE_FIELD_NUMBER = 10;
    private java.lang.Object change_;
    public boolean hasChange() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getChange() {
      java.lang.Object ref = change_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          change_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChangeBytes() {
      java.lang.Object ref = change_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        change_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      symbol_ = "";
      index_ = 0;
      ts_ = 0L;
      type_ = "";
      bid_ = 0F;
      ask_ = 0F;
      bidsize_ = 0;
      asksize_ = 0;
      exchange_ = "";
      change_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, ts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, bid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, ask_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, bidsize_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, asksize_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getChangeBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, ts_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, bid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, ask_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, bidsize_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, asksize_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getChangeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.tick_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.tick_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.tick_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_tick_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_tick_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.tick_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        bid_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        ask_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        bidsize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        asksize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        exchange_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        change_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.tick_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.tick_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.tick_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.tick_pb build() {
        com.mock.trading.pb.TradePb.tick_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.tick_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.tick_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.tick_pb buildPartial() {
        com.mock.trading.pb.TradePb.tick_pb result = new com.mock.trading.pb.TradePb.tick_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bid_ = bid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ask_ = ask_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bidsize_ = bidsize_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.asksize_ = asksize_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.exchange_ = exchange_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.change_ = change_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.tick_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.tick_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.tick_pb other) {
        if (other == com.mock.trading.pb.TradePb.tick_pb.getDefaultInstance()) return this;
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBid()) {
          setBid(other.getBid());
        }
        if (other.hasAsk()) {
          setAsk(other.getAsk());
        }
        if (other.hasBidsize()) {
          setBidsize(other.getBidsize());
        }
        if (other.hasAsksize()) {
          setAsksize(other.getAsksize());
        }
        if (other.hasExchange()) {
          setExchange(other.getExchange());
        }
        if (other.hasChange()) {
          setChange(other.getChange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              symbol_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ts_ = input.readUInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              type_ = input.readBytes();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              bid_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              ask_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bidsize_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              asksize_ = input.readUInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              exchange_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              change_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string symbol = 1;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
      }
      
      // optional uint32 index = 2;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 ts = 3;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000004;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string type = 4;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
      }
      
      // optional float bid = 5;
      private float bid_ ;
      public boolean hasBid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getBid() {
        return bid_;
      }
      public Builder setBid(float value) {
        bitField0_ |= 0x00000010;
        bid_ = value;
        onChanged();
        return this;
      }
      public Builder clearBid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bid_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float ask = 6;
      private float ask_ ;
      public boolean hasAsk() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getAsk() {
        return ask_;
      }
      public Builder setAsk(float value) {
        bitField0_ |= 0x00000020;
        ask_ = value;
        onChanged();
        return this;
      }
      public Builder clearAsk() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ask_ = 0F;
        onChanged();
        return this;
      }
      
      // optional uint32 bidsize = 7;
      private int bidsize_ ;
      public boolean hasBidsize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getBidsize() {
        return bidsize_;
      }
      public Builder setBidsize(int value) {
        bitField0_ |= 0x00000040;
        bidsize_ = value;
        onChanged();
        return this;
      }
      public Builder clearBidsize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bidsize_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 asksize = 8;
      private int asksize_ ;
      public boolean hasAsksize() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getAsksize() {
        return asksize_;
      }
      public Builder setAsksize(int value) {
        bitField0_ |= 0x00000080;
        asksize_ = value;
        onChanged();
        return this;
      }
      public Builder clearAsksize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        asksize_ = 0;
        onChanged();
        return this;
      }
      
      // optional string exchange = 9;
      private java.lang.Object exchange_ = "";
      public boolean hasExchange() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getExchange() {
        java.lang.Object ref = exchange_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exchange_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExchange(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        exchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearExchange() {
        bitField0_ = (bitField0_ & ~0x00000100);
        exchange_ = getDefaultInstance().getExchange();
        onChanged();
        return this;
      }
      void setExchange(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        exchange_ = value;
        onChanged();
      }
      
      // optional string change = 10;
      private java.lang.Object change_ = "";
      public boolean hasChange() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getChange() {
        java.lang.Object ref = change_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          change_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChange(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        change_ = value;
        onChanged();
        return this;
      }
      public Builder clearChange() {
        bitField0_ = (bitField0_ & ~0x00000200);
        change_ = getDefaultInstance().getChange();
        onChanged();
        return this;
      }
      void setChange(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        change_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.tick_pb)
    }
    
    static {
      defaultInstance = new tick_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.tick_pb)
  }
  
  public interface bar_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string symbol = 1;
    boolean hasSymbol();
    String getSymbol();
    
    // optional uint64 ts = 2;
    boolean hasTs();
    long getTs();
    
    // optional double open = 3;
    boolean hasOpen();
    double getOpen();
    
    // optional double high = 4;
    boolean hasHigh();
    double getHigh();
    
    // optional double low = 5;
    boolean hasLow();
    double getLow();
    
    // optional double close = 6;
    boolean hasClose();
    double getClose();
    
    // optional uint32 volume = 7;
    boolean hasVolume();
    int getVolume();
    
    // optional int32 sec = 8;
    boolean hasSec();
    int getSec();
  }
  public static final class bar_pb extends
      com.google.protobuf.GeneratedMessage
      implements bar_pbOrBuilder {
    // Use bar_pb.newBuilder() to construct.
    private bar_pb(Builder builder) {
      super(builder);
    }
    private bar_pb(boolean noInit) {}
    
    private static final bar_pb defaultInstance;
    public static bar_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public bar_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_bar_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_bar_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string symbol = 1;
    public static final int SYMBOL_FIELD_NUMBER = 1;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 ts = 2;
    public static final int TS_FIELD_NUMBER = 2;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional double open = 3;
    public static final int OPEN_FIELD_NUMBER = 3;
    private double open_;
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getOpen() {
      return open_;
    }
    
    // optional double high = 4;
    public static final int HIGH_FIELD_NUMBER = 4;
    private double high_;
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getHigh() {
      return high_;
    }
    
    // optional double low = 5;
    public static final int LOW_FIELD_NUMBER = 5;
    private double low_;
    public boolean hasLow() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getLow() {
      return low_;
    }
    
    // optional double close = 6;
    public static final int CLOSE_FIELD_NUMBER = 6;
    private double close_;
    public boolean hasClose() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getClose() {
      return close_;
    }
    
    // optional uint32 volume = 7;
    public static final int VOLUME_FIELD_NUMBER = 7;
    private int volume_;
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getVolume() {
      return volume_;
    }
    
    // optional int32 sec = 8;
    public static final int SEC_FIELD_NUMBER = 8;
    private int sec_;
    public boolean hasSec() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getSec() {
      return sec_;
    }
    
    private void initFields() {
      symbol_ = "";
      ts_ = 0L;
      open_ = 0D;
      high_ = 0D;
      low_ = 0D;
      close_ = 0D;
      volume_ = 0;
      sec_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, ts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, high_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, low_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, close_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, volume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, sec_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, ts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, high_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, low_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, close_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, volume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, sec_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.bar_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.bar_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.bar_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_bar_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_bar_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.bar_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        open_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        high_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        low_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        close_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        volume_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sec_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.bar_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.bar_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.bar_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.bar_pb build() {
        com.mock.trading.pb.TradePb.bar_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.bar_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.bar_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.bar_pb buildPartial() {
        com.mock.trading.pb.TradePb.bar_pb result = new com.mock.trading.pb.TradePb.bar_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.open_ = open_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.low_ = low_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sec_ = sec_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.bar_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.bar_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.bar_pb other) {
        if (other == com.mock.trading.pb.TradePb.bar_pb.getDefaultInstance()) return this;
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasSec()) {
          setSec(other.getSec());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              symbol_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ts_ = input.readUInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              open_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              high_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              low_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              close_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              volume_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sec_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string symbol = 1;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
      }
      
      // optional uint64 ts = 2;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000002;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional double open = 3;
      private double open_ ;
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getOpen() {
        return open_;
      }
      public Builder setOpen(double value) {
        bitField0_ |= 0x00000004;
        open_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        open_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double high = 4;
      private double high_ ;
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getHigh() {
        return high_;
      }
      public Builder setHigh(double value) {
        bitField0_ |= 0x00000008;
        high_ = value;
        onChanged();
        return this;
      }
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000008);
        high_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double low = 5;
      private double low_ ;
      public boolean hasLow() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getLow() {
        return low_;
      }
      public Builder setLow(double value) {
        bitField0_ |= 0x00000010;
        low_ = value;
        onChanged();
        return this;
      }
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000010);
        low_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double close = 6;
      private double close_ ;
      public boolean hasClose() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getClose() {
        return close_;
      }
      public Builder setClose(double value) {
        bitField0_ |= 0x00000020;
        close_ = value;
        onChanged();
        return this;
      }
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000020);
        close_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint32 volume = 7;
      private int volume_ ;
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getVolume() {
        return volume_;
      }
      public Builder setVolume(int value) {
        bitField0_ |= 0x00000040;
        volume_ = value;
        onChanged();
        return this;
      }
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000040);
        volume_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sec = 8;
      private int sec_ ;
      public boolean hasSec() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getSec() {
        return sec_;
      }
      public Builder setSec(int value) {
        bitField0_ |= 0x00000080;
        sec_ = value;
        onChanged();
        return this;
      }
      public Builder clearSec() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sec_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.bar_pb)
    }
    
    static {
      defaultInstance = new bar_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.bar_pb)
  }
  
  public interface security_info_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string symbol = 1;
    boolean hasSymbol();
    String getSymbol();
    
    // optional uint32 avg_daily_volume = 2;
    boolean hasAvgDailyVolume();
    int getAvgDailyVolume();
    
    // optional string market_cap = 3;
    boolean hasMarketCap();
    String getMarketCap();
    
    // optional double short_ratio = 4;
    boolean hasShortRatio();
    double getShortRatio();
    
    // optional double year_low = 5;
    boolean hasYearLow();
    double getYearLow();
    
    // optional double year_high = 6;
    boolean hasYearHigh();
    double getYearHigh();
    
    // optional uint32 shares = 7;
    boolean hasShares();
    int getShares();
    
    // optional double eps = 8;
    boolean hasEps();
    double getEps();
    
    // optional double target_price = 9;
    boolean hasTargetPrice();
    double getTargetPrice();
    
    // optional double pe = 10;
    boolean hasPe();
    double getPe();
    
    // optional string exchange = 11;
    boolean hasExchange();
    String getExchange();
    
    // optional uint32 date = 12;
    boolean hasDate();
    int getDate();
  }
  public static final class security_info_pb extends
      com.google.protobuf.GeneratedMessage
      implements security_info_pbOrBuilder {
    // Use security_info_pb.newBuilder() to construct.
    private security_info_pb(Builder builder) {
      super(builder);
    }
    private security_info_pb(boolean noInit) {}
    
    private static final security_info_pb defaultInstance;
    public static security_info_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public security_info_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_security_info_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_security_info_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string symbol = 1;
    public static final int SYMBOL_FIELD_NUMBER = 1;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 avg_daily_volume = 2;
    public static final int AVG_DAILY_VOLUME_FIELD_NUMBER = 2;
    private int avgDailyVolume_;
    public boolean hasAvgDailyVolume() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getAvgDailyVolume() {
      return avgDailyVolume_;
    }
    
    // optional string market_cap = 3;
    public static final int MARKET_CAP_FIELD_NUMBER = 3;
    private java.lang.Object marketCap_;
    public boolean hasMarketCap() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getMarketCap() {
      java.lang.Object ref = marketCap_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          marketCap_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMarketCapBytes() {
      java.lang.Object ref = marketCap_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        marketCap_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double short_ratio = 4;
    public static final int SHORT_RATIO_FIELD_NUMBER = 4;
    private double shortRatio_;
    public boolean hasShortRatio() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getShortRatio() {
      return shortRatio_;
    }
    
    // optional double year_low = 5;
    public static final int YEAR_LOW_FIELD_NUMBER = 5;
    private double yearLow_;
    public boolean hasYearLow() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getYearLow() {
      return yearLow_;
    }
    
    // optional double year_high = 6;
    public static final int YEAR_HIGH_FIELD_NUMBER = 6;
    private double yearHigh_;
    public boolean hasYearHigh() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getYearHigh() {
      return yearHigh_;
    }
    
    // optional uint32 shares = 7;
    public static final int SHARES_FIELD_NUMBER = 7;
    private int shares_;
    public boolean hasShares() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getShares() {
      return shares_;
    }
    
    // optional double eps = 8;
    public static final int EPS_FIELD_NUMBER = 8;
    private double eps_;
    public boolean hasEps() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getEps() {
      return eps_;
    }
    
    // optional double target_price = 9;
    public static final int TARGET_PRICE_FIELD_NUMBER = 9;
    private double targetPrice_;
    public boolean hasTargetPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public double getTargetPrice() {
      return targetPrice_;
    }
    
    // optional double pe = 10;
    public static final int PE_FIELD_NUMBER = 10;
    private double pe_;
    public boolean hasPe() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public double getPe() {
      return pe_;
    }
    
    // optional string exchange = 11;
    public static final int EXCHANGE_FIELD_NUMBER = 11;
    private java.lang.Object exchange_;
    public boolean hasExchange() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getExchange() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exchange_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 date = 12;
    public static final int DATE_FIELD_NUMBER = 12;
    private int date_;
    public boolean hasDate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getDate() {
      return date_;
    }
    
    private void initFields() {
      symbol_ = "";
      avgDailyVolume_ = 0;
      marketCap_ = "";
      shortRatio_ = 0D;
      yearLow_ = 0D;
      yearHigh_ = 0D;
      shares_ = 0;
      eps_ = 0D;
      targetPrice_ = 0D;
      pe_ = 0D;
      exchange_ = "";
      date_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, avgDailyVolume_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMarketCapBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, shortRatio_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, yearLow_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, yearHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, shares_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, eps_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, targetPrice_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, pe_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, date_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, avgDailyVolume_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMarketCapBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, shortRatio_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, yearLow_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, yearHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, shares_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, eps_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, targetPrice_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, pe_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, date_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.security_info_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.security_info_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.security_info_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_security_info_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_security_info_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.security_info_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        avgDailyVolume_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        marketCap_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        shortRatio_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        yearLow_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        yearHigh_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        shares_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        eps_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        targetPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        pe_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        exchange_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        date_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.security_info_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.security_info_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.security_info_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.security_info_pb build() {
        com.mock.trading.pb.TradePb.security_info_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.security_info_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.security_info_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.security_info_pb buildPartial() {
        com.mock.trading.pb.TradePb.security_info_pb result = new com.mock.trading.pb.TradePb.security_info_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.avgDailyVolume_ = avgDailyVolume_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.marketCap_ = marketCap_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shortRatio_ = shortRatio_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.yearLow_ = yearLow_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.yearHigh_ = yearHigh_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shares_ = shares_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.eps_ = eps_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.targetPrice_ = targetPrice_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pe_ = pe_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.exchange_ = exchange_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.date_ = date_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.security_info_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.security_info_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.security_info_pb other) {
        if (other == com.mock.trading.pb.TradePb.security_info_pb.getDefaultInstance()) return this;
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasAvgDailyVolume()) {
          setAvgDailyVolume(other.getAvgDailyVolume());
        }
        if (other.hasMarketCap()) {
          setMarketCap(other.getMarketCap());
        }
        if (other.hasShortRatio()) {
          setShortRatio(other.getShortRatio());
        }
        if (other.hasYearLow()) {
          setYearLow(other.getYearLow());
        }
        if (other.hasYearHigh()) {
          setYearHigh(other.getYearHigh());
        }
        if (other.hasShares()) {
          setShares(other.getShares());
        }
        if (other.hasEps()) {
          setEps(other.getEps());
        }
        if (other.hasTargetPrice()) {
          setTargetPrice(other.getTargetPrice());
        }
        if (other.hasPe()) {
          setPe(other.getPe());
        }
        if (other.hasExchange()) {
          setExchange(other.getExchange());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              symbol_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              avgDailyVolume_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              marketCap_ = input.readBytes();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              shortRatio_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              yearLow_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              yearHigh_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              shares_ = input.readUInt32();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              eps_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              targetPrice_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              pe_ = input.readDouble();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              exchange_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              date_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string symbol = 1;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
      }
      
      // optional uint32 avg_daily_volume = 2;
      private int avgDailyVolume_ ;
      public boolean hasAvgDailyVolume() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getAvgDailyVolume() {
        return avgDailyVolume_;
      }
      public Builder setAvgDailyVolume(int value) {
        bitField0_ |= 0x00000002;
        avgDailyVolume_ = value;
        onChanged();
        return this;
      }
      public Builder clearAvgDailyVolume() {
        bitField0_ = (bitField0_ & ~0x00000002);
        avgDailyVolume_ = 0;
        onChanged();
        return this;
      }
      
      // optional string market_cap = 3;
      private java.lang.Object marketCap_ = "";
      public boolean hasMarketCap() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMarketCap() {
        java.lang.Object ref = marketCap_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          marketCap_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMarketCap(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        marketCap_ = value;
        onChanged();
        return this;
      }
      public Builder clearMarketCap() {
        bitField0_ = (bitField0_ & ~0x00000004);
        marketCap_ = getDefaultInstance().getMarketCap();
        onChanged();
        return this;
      }
      void setMarketCap(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        marketCap_ = value;
        onChanged();
      }
      
      // optional double short_ratio = 4;
      private double shortRatio_ ;
      public boolean hasShortRatio() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getShortRatio() {
        return shortRatio_;
      }
      public Builder setShortRatio(double value) {
        bitField0_ |= 0x00000008;
        shortRatio_ = value;
        onChanged();
        return this;
      }
      public Builder clearShortRatio() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shortRatio_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double year_low = 5;
      private double yearLow_ ;
      public boolean hasYearLow() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getYearLow() {
        return yearLow_;
      }
      public Builder setYearLow(double value) {
        bitField0_ |= 0x00000010;
        yearLow_ = value;
        onChanged();
        return this;
      }
      public Builder clearYearLow() {
        bitField0_ = (bitField0_ & ~0x00000010);
        yearLow_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double year_high = 6;
      private double yearHigh_ ;
      public boolean hasYearHigh() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getYearHigh() {
        return yearHigh_;
      }
      public Builder setYearHigh(double value) {
        bitField0_ |= 0x00000020;
        yearHigh_ = value;
        onChanged();
        return this;
      }
      public Builder clearYearHigh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        yearHigh_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint32 shares = 7;
      private int shares_ ;
      public boolean hasShares() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getShares() {
        return shares_;
      }
      public Builder setShares(int value) {
        bitField0_ |= 0x00000040;
        shares_ = value;
        onChanged();
        return this;
      }
      public Builder clearShares() {
        bitField0_ = (bitField0_ & ~0x00000040);
        shares_ = 0;
        onChanged();
        return this;
      }
      
      // optional double eps = 8;
      private double eps_ ;
      public boolean hasEps() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getEps() {
        return eps_;
      }
      public Builder setEps(double value) {
        bitField0_ |= 0x00000080;
        eps_ = value;
        onChanged();
        return this;
      }
      public Builder clearEps() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eps_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double target_price = 9;
      private double targetPrice_ ;
      public boolean hasTargetPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public double getTargetPrice() {
        return targetPrice_;
      }
      public Builder setTargetPrice(double value) {
        bitField0_ |= 0x00000100;
        targetPrice_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        targetPrice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double pe = 10;
      private double pe_ ;
      public boolean hasPe() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public double getPe() {
        return pe_;
      }
      public Builder setPe(double value) {
        bitField0_ |= 0x00000200;
        pe_ = value;
        onChanged();
        return this;
      }
      public Builder clearPe() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pe_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string exchange = 11;
      private java.lang.Object exchange_ = "";
      public boolean hasExchange() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getExchange() {
        java.lang.Object ref = exchange_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exchange_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExchange(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        exchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearExchange() {
        bitField0_ = (bitField0_ & ~0x00000400);
        exchange_ = getDefaultInstance().getExchange();
        onChanged();
        return this;
      }
      void setExchange(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        exchange_ = value;
        onChanged();
      }
      
      // optional uint32 date = 12;
      private int date_ ;
      public boolean hasDate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getDate() {
        return date_;
      }
      public Builder setDate(int value) {
        bitField0_ |= 0x00000800;
        date_ = value;
        onChanged();
        return this;
      }
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        date_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.security_info_pb)
    }
    
    static {
      defaultInstance = new security_info_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.security_info_pb)
  }
  
  public interface daily_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string symbol = 1;
    boolean hasSymbol();
    String getSymbol();
    
    // optional uint32 date = 2;
    boolean hasDate();
    int getDate();
    
    // optional double open = 3;
    boolean hasOpen();
    double getOpen();
    
    // optional double high = 4;
    boolean hasHigh();
    double getHigh();
    
    // optional double low = 5;
    boolean hasLow();
    double getLow();
    
    // optional double close = 6;
    boolean hasClose();
    double getClose();
    
    // optional uint32 volume = 7;
    boolean hasVolume();
    int getVolume();
  }
  public static final class daily_pb extends
      com.google.protobuf.GeneratedMessage
      implements daily_pbOrBuilder {
    // Use daily_pb.newBuilder() to construct.
    private daily_pb(Builder builder) {
      super(builder);
    }
    private daily_pb(boolean noInit) {}
    
    private static final daily_pb defaultInstance;
    public static daily_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public daily_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_daily_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_daily_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string symbol = 1;
    public static final int SYMBOL_FIELD_NUMBER = 1;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 date = 2;
    public static final int DATE_FIELD_NUMBER = 2;
    private int date_;
    public boolean hasDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDate() {
      return date_;
    }
    
    // optional double open = 3;
    public static final int OPEN_FIELD_NUMBER = 3;
    private double open_;
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getOpen() {
      return open_;
    }
    
    // optional double high = 4;
    public static final int HIGH_FIELD_NUMBER = 4;
    private double high_;
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getHigh() {
      return high_;
    }
    
    // optional double low = 5;
    public static final int LOW_FIELD_NUMBER = 5;
    private double low_;
    public boolean hasLow() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getLow() {
      return low_;
    }
    
    // optional double close = 6;
    public static final int CLOSE_FIELD_NUMBER = 6;
    private double close_;
    public boolean hasClose() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getClose() {
      return close_;
    }
    
    // optional uint32 volume = 7;
    public static final int VOLUME_FIELD_NUMBER = 7;
    private int volume_;
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getVolume() {
      return volume_;
    }
    
    private void initFields() {
      symbol_ = "";
      date_ = 0;
      open_ = 0D;
      high_ = 0D;
      low_ = 0D;
      close_ = 0D;
      volume_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, date_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, high_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, low_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, close_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, volume_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, date_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, high_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, low_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, close_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, volume_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.daily_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.daily_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.daily_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_daily_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_daily_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.daily_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        date_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        open_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        high_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        low_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        close_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        volume_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.daily_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.daily_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.daily_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.daily_pb build() {
        com.mock.trading.pb.TradePb.daily_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.daily_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.daily_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.daily_pb buildPartial() {
        com.mock.trading.pb.TradePb.daily_pb result = new com.mock.trading.pb.TradePb.daily_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.open_ = open_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.low_ = low_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.volume_ = volume_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.daily_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.daily_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.daily_pb other) {
        if (other == com.mock.trading.pb.TradePb.daily_pb.getDefaultInstance()) return this;
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              symbol_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              date_ = input.readUInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              open_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              high_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              low_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              close_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              volume_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string symbol = 1;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        symbol_ = value;
        onChanged();
      }
      
      // optional uint32 date = 2;
      private int date_ ;
      public boolean hasDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDate() {
        return date_;
      }
      public Builder setDate(int value) {
        bitField0_ |= 0x00000002;
        date_ = value;
        onChanged();
        return this;
      }
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = 0;
        onChanged();
        return this;
      }
      
      // optional double open = 3;
      private double open_ ;
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getOpen() {
        return open_;
      }
      public Builder setOpen(double value) {
        bitField0_ |= 0x00000004;
        open_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        open_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double high = 4;
      private double high_ ;
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getHigh() {
        return high_;
      }
      public Builder setHigh(double value) {
        bitField0_ |= 0x00000008;
        high_ = value;
        onChanged();
        return this;
      }
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000008);
        high_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double low = 5;
      private double low_ ;
      public boolean hasLow() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getLow() {
        return low_;
      }
      public Builder setLow(double value) {
        bitField0_ |= 0x00000010;
        low_ = value;
        onChanged();
        return this;
      }
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000010);
        low_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double close = 6;
      private double close_ ;
      public boolean hasClose() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getClose() {
        return close_;
      }
      public Builder setClose(double value) {
        bitField0_ |= 0x00000020;
        close_ = value;
        onChanged();
        return this;
      }
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000020);
        close_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint32 volume = 7;
      private int volume_ ;
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getVolume() {
        return volume_;
      }
      public Builder setVolume(int value) {
        bitField0_ |= 0x00000040;
        volume_ = value;
        onChanged();
        return this;
      }
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000040);
        volume_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.daily_pb)
    }
    
    static {
      defaultInstance = new daily_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.daily_pb)
  }
  
  public interface macd_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double macd = 1;
    boolean hasMacd();
    double getMacd();
    
    // optional double signal = 2;
    boolean hasSignal();
    double getSignal();
    
    // optional double macdhist = 3;
    boolean hasMacdhist();
    double getMacdhist();
    
    // optional .com.elvenland.trading.pb.macd_cross_pbe cross = 4 [default = none];
    boolean hasCross();
    com.mock.trading.pb.TradePb.macd_cross_pbe getCross();
  }
  public static final class macd_pb extends
      com.google.protobuf.GeneratedMessage
      implements macd_pbOrBuilder {
    // Use macd_pb.newBuilder() to construct.
    private macd_pb(Builder builder) {
      super(builder);
    }
    private macd_pb(boolean noInit) {}
    
    private static final macd_pb defaultInstance;
    public static macd_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public macd_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_macd_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_macd_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double macd = 1;
    public static final int MACD_FIELD_NUMBER = 1;
    private double macd_;
    public boolean hasMacd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getMacd() {
      return macd_;
    }
    
    // optional double signal = 2;
    public static final int SIGNAL_FIELD_NUMBER = 2;
    private double signal_;
    public boolean hasSignal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getSignal() {
      return signal_;
    }
    
    // optional double macdhist = 3;
    public static final int MACDHIST_FIELD_NUMBER = 3;
    private double macdhist_;
    public boolean hasMacdhist() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getMacdhist() {
      return macdhist_;
    }
    
    // optional .com.elvenland.trading.pb.macd_cross_pbe cross = 4 [default = none];
    public static final int CROSS_FIELD_NUMBER = 4;
    private com.mock.trading.pb.TradePb.macd_cross_pbe cross_;
    public boolean hasCross() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.mock.trading.pb.TradePb.macd_cross_pbe getCross() {
      return cross_;
    }
    
    private void initFields() {
      macd_ = 0D;
      signal_ = 0D;
      macdhist_ = 0D;
      cross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.none;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, macd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, signal_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, macdhist_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, cross_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, macd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, signal_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, macdhist_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, cross_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.macd_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.macd_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.macd_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_macd_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_macd_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.macd_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        macd_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        signal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        macdhist_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        cross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.none;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.macd_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.macd_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.macd_pb build() {
        com.mock.trading.pb.TradePb.macd_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.macd_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.macd_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.macd_pb buildPartial() {
        com.mock.trading.pb.TradePb.macd_pb result = new com.mock.trading.pb.TradePb.macd_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.macd_ = macd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signal_ = signal_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.macdhist_ = macdhist_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cross_ = cross_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.macd_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.macd_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.macd_pb other) {
        if (other == com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance()) return this;
        if (other.hasMacd()) {
          setMacd(other.getMacd());
        }
        if (other.hasSignal()) {
          setSignal(other.getSignal());
        }
        if (other.hasMacdhist()) {
          setMacdhist(other.getMacdhist());
        }
        if (other.hasCross()) {
          setCross(other.getCross());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              macd_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              signal_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              macdhist_ = input.readDouble();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.mock.trading.pb.TradePb.macd_cross_pbe value = com.mock.trading.pb.TradePb.macd_cross_pbe.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                cross_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double macd = 1;
      private double macd_ ;
      public boolean hasMacd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getMacd() {
        return macd_;
      }
      public Builder setMacd(double value) {
        bitField0_ |= 0x00000001;
        macd_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        macd_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double signal = 2;
      private double signal_ ;
      public boolean hasSignal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getSignal() {
        return signal_;
      }
      public Builder setSignal(double value) {
        bitField0_ |= 0x00000002;
        signal_ = value;
        onChanged();
        return this;
      }
      public Builder clearSignal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signal_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double macdhist = 3;
      private double macdhist_ ;
      public boolean hasMacdhist() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getMacdhist() {
        return macdhist_;
      }
      public Builder setMacdhist(double value) {
        bitField0_ |= 0x00000004;
        macdhist_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacdhist() {
        bitField0_ = (bitField0_ & ~0x00000004);
        macdhist_ = 0D;
        onChanged();
        return this;
      }
      
      // optional .com.elvenland.trading.pb.macd_cross_pbe cross = 4 [default = none];
      private com.mock.trading.pb.TradePb.macd_cross_pbe cross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.none;
      public boolean hasCross() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.mock.trading.pb.TradePb.macd_cross_pbe getCross() {
        return cross_;
      }
      public Builder setCross(com.mock.trading.pb.TradePb.macd_cross_pbe value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        cross_ = value;
        onChanged();
        return this;
      }
      public Builder clearCross() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.none;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.macd_pb)
    }
    
    static {
      defaultInstance = new macd_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.macd_pb)
  }
  
  public interface indicator_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.elvenland.trading.pb.macd_pb macd = 1;
    boolean hasMacd();
    com.mock.trading.pb.TradePb.macd_pb getMacd();
    com.mock.trading.pb.TradePb.macd_pbOrBuilder getMacdOrBuilder();
    
    // optional double rsi = 2;
    boolean hasRsi();
    double getRsi();
    
    // optional double rsi2 = 3;
    boolean hasRsi2();
    double getRsi2();
    
    // optional double adx = 4;
    boolean hasAdx();
    double getAdx();
  }
  public static final class indicator_pb extends
      com.google.protobuf.GeneratedMessage
      implements indicator_pbOrBuilder {
    // Use indicator_pb.newBuilder() to construct.
    private indicator_pb(Builder builder) {
      super(builder);
    }
    private indicator_pb(boolean noInit) {}
    
    private static final indicator_pb defaultInstance;
    public static indicator_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public indicator_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_indicator_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_indicator_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.elvenland.trading.pb.macd_pb macd = 1;
    public static final int MACD_FIELD_NUMBER = 1;
    private com.mock.trading.pb.TradePb.macd_pb macd_;
    public boolean hasMacd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.mock.trading.pb.TradePb.macd_pb getMacd() {
      return macd_;
    }
    public com.mock.trading.pb.TradePb.macd_pbOrBuilder getMacdOrBuilder() {
      return macd_;
    }
    
    // optional double rsi = 2;
    public static final int RSI_FIELD_NUMBER = 2;
    private double rsi_;
    public boolean hasRsi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getRsi() {
      return rsi_;
    }
    
    // optional double rsi2 = 3;
    public static final int RSI2_FIELD_NUMBER = 3;
    private double rsi2_;
    public boolean hasRsi2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getRsi2() {
      return rsi2_;
    }
    
    // optional double adx = 4;
    public static final int ADX_FIELD_NUMBER = 4;
    private double adx_;
    public boolean hasAdx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getAdx() {
      return adx_;
    }
    
    private void initFields() {
      macd_ = com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance();
      rsi_ = 0D;
      rsi2_ = 0D;
      adx_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, macd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, rsi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, rsi2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, adx_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, macd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, rsi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rsi2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, adx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.indicator_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.indicator_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.indicator_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_indicator_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_indicator_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.indicator_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMacdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (macdBuilder_ == null) {
          macd_ = com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance();
        } else {
          macdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        rsi_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        rsi2_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        adx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.indicator_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.indicator_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.indicator_pb build() {
        com.mock.trading.pb.TradePb.indicator_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.indicator_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.indicator_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.indicator_pb buildPartial() {
        com.mock.trading.pb.TradePb.indicator_pb result = new com.mock.trading.pb.TradePb.indicator_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (macdBuilder_ == null) {
          result.macd_ = macd_;
        } else {
          result.macd_ = macdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rsi_ = rsi_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rsi2_ = rsi2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.adx_ = adx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.indicator_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.indicator_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.indicator_pb other) {
        if (other == com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance()) return this;
        if (other.hasMacd()) {
          mergeMacd(other.getMacd());
        }
        if (other.hasRsi()) {
          setRsi(other.getRsi());
        }
        if (other.hasRsi2()) {
          setRsi2(other.getRsi2());
        }
        if (other.hasAdx()) {
          setAdx(other.getAdx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.mock.trading.pb.TradePb.macd_pb.Builder subBuilder = com.mock.trading.pb.TradePb.macd_pb.newBuilder();
              if (hasMacd()) {
                subBuilder.mergeFrom(getMacd());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMacd(subBuilder.buildPartial());
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              rsi_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              rsi2_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              adx_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.elvenland.trading.pb.macd_pb macd = 1;
      private com.mock.trading.pb.TradePb.macd_pb macd_ = com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mock.trading.pb.TradePb.macd_pb, com.mock.trading.pb.TradePb.macd_pb.Builder, com.mock.trading.pb.TradePb.macd_pbOrBuilder> macdBuilder_;
      public boolean hasMacd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.mock.trading.pb.TradePb.macd_pb getMacd() {
        if (macdBuilder_ == null) {
          return macd_;
        } else {
          return macdBuilder_.getMessage();
        }
      }
      public Builder setMacd(com.mock.trading.pb.TradePb.macd_pb value) {
        if (macdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          macd_ = value;
          onChanged();
        } else {
          macdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setMacd(
          com.mock.trading.pb.TradePb.macd_pb.Builder builderForValue) {
        if (macdBuilder_ == null) {
          macd_ = builderForValue.build();
          onChanged();
        } else {
          macdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeMacd(com.mock.trading.pb.TradePb.macd_pb value) {
        if (macdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              macd_ != com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance()) {
            macd_ =
              com.mock.trading.pb.TradePb.macd_pb.newBuilder(macd_).mergeFrom(value).buildPartial();
          } else {
            macd_ = value;
          }
          onChanged();
        } else {
          macdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearMacd() {
        if (macdBuilder_ == null) {
          macd_ = com.mock.trading.pb.TradePb.macd_pb.getDefaultInstance();
          onChanged();
        } else {
          macdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.mock.trading.pb.TradePb.macd_pb.Builder getMacdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMacdFieldBuilder().getBuilder();
      }
      public com.mock.trading.pb.TradePb.macd_pbOrBuilder getMacdOrBuilder() {
        if (macdBuilder_ != null) {
          return macdBuilder_.getMessageOrBuilder();
        } else {
          return macd_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.mock.trading.pb.TradePb.macd_pb, com.mock.trading.pb.TradePb.macd_pb.Builder, com.mock.trading.pb.TradePb.macd_pbOrBuilder> 
          getMacdFieldBuilder() {
        if (macdBuilder_ == null) {
          macdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mock.trading.pb.TradePb.macd_pb, com.mock.trading.pb.TradePb.macd_pb.Builder, com.mock.trading.pb.TradePb.macd_pbOrBuilder>(
                  macd_,
                  getParentForChildren(),
                  isClean());
          macd_ = null;
        }
        return macdBuilder_;
      }
      
      // optional double rsi = 2;
      private double rsi_ ;
      public boolean hasRsi() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getRsi() {
        return rsi_;
      }
      public Builder setRsi(double value) {
        bitField0_ |= 0x00000002;
        rsi_ = value;
        onChanged();
        return this;
      }
      public Builder clearRsi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rsi_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double rsi2 = 3;
      private double rsi2_ ;
      public boolean hasRsi2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getRsi2() {
        return rsi2_;
      }
      public Builder setRsi2(double value) {
        bitField0_ |= 0x00000004;
        rsi2_ = value;
        onChanged();
        return this;
      }
      public Builder clearRsi2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rsi2_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double adx = 4;
      private double adx_ ;
      public boolean hasAdx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getAdx() {
        return adx_;
      }
      public Builder setAdx(double value) {
        bitField0_ |= 0x00000008;
        adx_ = value;
        onChanged();
        return this;
      }
      public Builder clearAdx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        adx_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.indicator_pb)
    }
    
    static {
      defaultInstance = new indicator_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.indicator_pb)
  }
  
  public interface strat_out_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional uint64 time = 2;
    boolean hasTime();
    long getTime();
    
    // optional .com.elvenland.trading.pb.macd_cross_pbe macd_cross = 3;
    boolean hasMacdCross();
    com.mock.trading.pb.TradePb.macd_cross_pbe getMacdCross();
    
    // optional double rsi_up = 4;
    boolean hasRsiUp();
    double getRsiUp();
    
    // optional uint32 rsi_down = 5;
    boolean hasRsiDown();
    int getRsiDown();
    
    // optional uint32 adx_limit = 6;
    boolean hasAdxLimit();
    int getAdxLimit();
    
    // optional .com.elvenland.trading.pb.indicator_pb indicator = 7;
    boolean hasIndicator();
    com.mock.trading.pb.TradePb.indicator_pb getIndicator();
    com.mock.trading.pb.TradePb.indicator_pbOrBuilder getIndicatorOrBuilder();
    
    // optional double price = 8;
    boolean hasPrice();
    double getPrice();
    
    // repeated .com.elvenland.trading.pb.bar_pb bars = 9;
    java.util.List<com.mock.trading.pb.TradePb.bar_pb> 
        getBarsList();
    com.mock.trading.pb.TradePb.bar_pb getBars(int index);
    int getBarsCount();
    java.util.List<? extends com.mock.trading.pb.TradePb.bar_pbOrBuilder> 
        getBarsOrBuilderList();
    com.mock.trading.pb.TradePb.bar_pbOrBuilder getBarsOrBuilder(
        int index);
  }
  public static final class strat_out_pb extends
      com.google.protobuf.GeneratedMessage
      implements strat_out_pbOrBuilder {
    // Use strat_out_pb.newBuilder() to construct.
    private strat_out_pb(Builder builder) {
      super(builder);
    }
    private strat_out_pb(boolean noInit) {}
    
    private static final strat_out_pb defaultInstance;
    public static strat_out_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public strat_out_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_strat_out_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_strat_out_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTime() {
      return time_;
    }
    
    // optional .com.elvenland.trading.pb.macd_cross_pbe macd_cross = 3;
    public static final int MACD_CROSS_FIELD_NUMBER = 3;
    private com.mock.trading.pb.TradePb.macd_cross_pbe macdCross_;
    public boolean hasMacdCross() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.mock.trading.pb.TradePb.macd_cross_pbe getMacdCross() {
      return macdCross_;
    }
    
    // optional double rsi_up = 4;
    public static final int RSI_UP_FIELD_NUMBER = 4;
    private double rsiUp_;
    public boolean hasRsiUp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getRsiUp() {
      return rsiUp_;
    }
    
    // optional uint32 rsi_down = 5;
    public static final int RSI_DOWN_FIELD_NUMBER = 5;
    private int rsiDown_;
    public boolean hasRsiDown() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRsiDown() {
      return rsiDown_;
    }
    
    // optional uint32 adx_limit = 6;
    public static final int ADX_LIMIT_FIELD_NUMBER = 6;
    private int adxLimit_;
    public boolean hasAdxLimit() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getAdxLimit() {
      return adxLimit_;
    }
    
    // optional .com.elvenland.trading.pb.indicator_pb indicator = 7;
    public static final int INDICATOR_FIELD_NUMBER = 7;
    private com.mock.trading.pb.TradePb.indicator_pb indicator_;
    public boolean hasIndicator() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public com.mock.trading.pb.TradePb.indicator_pb getIndicator() {
      return indicator_;
    }
    public com.mock.trading.pb.TradePb.indicator_pbOrBuilder getIndicatorOrBuilder() {
      return indicator_;
    }
    
    // optional double price = 8;
    public static final int PRICE_FIELD_NUMBER = 8;
    private double price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getPrice() {
      return price_;
    }
    
    // repeated .com.elvenland.trading.pb.bar_pb bars = 9;
    public static final int BARS_FIELD_NUMBER = 9;
    private java.util.List<com.mock.trading.pb.TradePb.bar_pb> bars_;
    public java.util.List<com.mock.trading.pb.TradePb.bar_pb> getBarsList() {
      return bars_;
    }
    public java.util.List<? extends com.mock.trading.pb.TradePb.bar_pbOrBuilder> 
        getBarsOrBuilderList() {
      return bars_;
    }
    public int getBarsCount() {
      return bars_.size();
    }
    public com.mock.trading.pb.TradePb.bar_pb getBars(int index) {
      return bars_.get(index);
    }
    public com.mock.trading.pb.TradePb.bar_pbOrBuilder getBarsOrBuilder(
        int index) {
      return bars_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      time_ = 0L;
      macdCross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.cross_above;
      rsiUp_ = 0D;
      rsiDown_ = 0;
      adxLimit_ = 0;
      indicator_ = com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance();
      price_ = 0D;
      bars_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, macdCross_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rsiUp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, rsiDown_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, adxLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, indicator_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, price_);
      }
      for (int i = 0; i < bars_.size(); i++) {
        output.writeMessage(9, bars_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, macdCross_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rsiUp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rsiDown_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, adxLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, indicator_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, price_);
      }
      for (int i = 0; i < bars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, bars_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.strat_out_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.strat_out_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.strat_out_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_strat_out_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_strat_out_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.strat_out_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIndicatorFieldBuilder();
          getBarsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        macdCross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.cross_above;
        bitField0_ = (bitField0_ & ~0x00000004);
        rsiUp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        rsiDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        adxLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (indicatorBuilder_ == null) {
          indicator_ = com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance();
        } else {
          indicatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (barsBuilder_ == null) {
          bars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          barsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.strat_out_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.strat_out_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.strat_out_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.strat_out_pb build() {
        com.mock.trading.pb.TradePb.strat_out_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.strat_out_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.strat_out_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.strat_out_pb buildPartial() {
        com.mock.trading.pb.TradePb.strat_out_pb result = new com.mock.trading.pb.TradePb.strat_out_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.macdCross_ = macdCross_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rsiUp_ = rsiUp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rsiDown_ = rsiDown_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.adxLimit_ = adxLimit_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (indicatorBuilder_ == null) {
          result.indicator_ = indicator_;
        } else {
          result.indicator_ = indicatorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.price_ = price_;
        if (barsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            bars_ = java.util.Collections.unmodifiableList(bars_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.bars_ = bars_;
        } else {
          result.bars_ = barsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.strat_out_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.strat_out_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.strat_out_pb other) {
        if (other == com.mock.trading.pb.TradePb.strat_out_pb.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasMacdCross()) {
          setMacdCross(other.getMacdCross());
        }
        if (other.hasRsiUp()) {
          setRsiUp(other.getRsiUp());
        }
        if (other.hasRsiDown()) {
          setRsiDown(other.getRsiDown());
        }
        if (other.hasAdxLimit()) {
          setAdxLimit(other.getAdxLimit());
        }
        if (other.hasIndicator()) {
          mergeIndicator(other.getIndicator());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (barsBuilder_ == null) {
          if (!other.bars_.isEmpty()) {
            if (bars_.isEmpty()) {
              bars_ = other.bars_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureBarsIsMutable();
              bars_.addAll(other.bars_);
            }
            onChanged();
          }
        } else {
          if (!other.bars_.isEmpty()) {
            if (barsBuilder_.isEmpty()) {
              barsBuilder_.dispose();
              barsBuilder_ = null;
              bars_ = other.bars_;
              bitField0_ = (bitField0_ & ~0x00000100);
              barsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBarsFieldBuilder() : null;
            } else {
              barsBuilder_.addAllMessages(other.bars_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.mock.trading.pb.TradePb.macd_cross_pbe value = com.mock.trading.pb.TradePb.macd_cross_pbe.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                macdCross_ = value;
              }
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rsiUp_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rsiDown_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              adxLimit_ = input.readUInt32();
              break;
            }
            case 58: {
              com.mock.trading.pb.TradePb.indicator_pb.Builder subBuilder = com.mock.trading.pb.TradePb.indicator_pb.newBuilder();
              if (hasIndicator()) {
                subBuilder.mergeFrom(getIndicator());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIndicator(subBuilder.buildPartial());
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              price_ = input.readDouble();
              break;
            }
            case 74: {
              com.mock.trading.pb.TradePb.bar_pb.Builder subBuilder = com.mock.trading.pb.TradePb.bar_pb.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBars(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional uint64 time = 2;
      private long time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTime() {
        return time_;
      }
      public Builder setTime(long value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .com.elvenland.trading.pb.macd_cross_pbe macd_cross = 3;
      private com.mock.trading.pb.TradePb.macd_cross_pbe macdCross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.cross_above;
      public boolean hasMacdCross() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.mock.trading.pb.TradePb.macd_cross_pbe getMacdCross() {
        return macdCross_;
      }
      public Builder setMacdCross(com.mock.trading.pb.TradePb.macd_cross_pbe value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        macdCross_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacdCross() {
        bitField0_ = (bitField0_ & ~0x00000004);
        macdCross_ = com.mock.trading.pb.TradePb.macd_cross_pbe.cross_above;
        onChanged();
        return this;
      }
      
      // optional double rsi_up = 4;
      private double rsiUp_ ;
      public boolean hasRsiUp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getRsiUp() {
        return rsiUp_;
      }
      public Builder setRsiUp(double value) {
        bitField0_ |= 0x00000008;
        rsiUp_ = value;
        onChanged();
        return this;
      }
      public Builder clearRsiUp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rsiUp_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint32 rsi_down = 5;
      private int rsiDown_ ;
      public boolean hasRsiDown() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRsiDown() {
        return rsiDown_;
      }
      public Builder setRsiDown(int value) {
        bitField0_ |= 0x00000010;
        rsiDown_ = value;
        onChanged();
        return this;
      }
      public Builder clearRsiDown() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rsiDown_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 adx_limit = 6;
      private int adxLimit_ ;
      public boolean hasAdxLimit() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getAdxLimit() {
        return adxLimit_;
      }
      public Builder setAdxLimit(int value) {
        bitField0_ |= 0x00000020;
        adxLimit_ = value;
        onChanged();
        return this;
      }
      public Builder clearAdxLimit() {
        bitField0_ = (bitField0_ & ~0x00000020);
        adxLimit_ = 0;
        onChanged();
        return this;
      }
      
      // optional .com.elvenland.trading.pb.indicator_pb indicator = 7;
      private com.mock.trading.pb.TradePb.indicator_pb indicator_ = com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mock.trading.pb.TradePb.indicator_pb, com.mock.trading.pb.TradePb.indicator_pb.Builder, com.mock.trading.pb.TradePb.indicator_pbOrBuilder> indicatorBuilder_;
      public boolean hasIndicator() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public com.mock.trading.pb.TradePb.indicator_pb getIndicator() {
        if (indicatorBuilder_ == null) {
          return indicator_;
        } else {
          return indicatorBuilder_.getMessage();
        }
      }
      public Builder setIndicator(com.mock.trading.pb.TradePb.indicator_pb value) {
        if (indicatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          indicator_ = value;
          onChanged();
        } else {
          indicatorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setIndicator(
          com.mock.trading.pb.TradePb.indicator_pb.Builder builderForValue) {
        if (indicatorBuilder_ == null) {
          indicator_ = builderForValue.build();
          onChanged();
        } else {
          indicatorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeIndicator(com.mock.trading.pb.TradePb.indicator_pb value) {
        if (indicatorBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              indicator_ != com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance()) {
            indicator_ =
              com.mock.trading.pb.TradePb.indicator_pb.newBuilder(indicator_).mergeFrom(value).buildPartial();
          } else {
            indicator_ = value;
          }
          onChanged();
        } else {
          indicatorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearIndicator() {
        if (indicatorBuilder_ == null) {
          indicator_ = com.mock.trading.pb.TradePb.indicator_pb.getDefaultInstance();
          onChanged();
        } else {
          indicatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public com.mock.trading.pb.TradePb.indicator_pb.Builder getIndicatorBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getIndicatorFieldBuilder().getBuilder();
      }
      public com.mock.trading.pb.TradePb.indicator_pbOrBuilder getIndicatorOrBuilder() {
        if (indicatorBuilder_ != null) {
          return indicatorBuilder_.getMessageOrBuilder();
        } else {
          return indicator_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.mock.trading.pb.TradePb.indicator_pb, com.mock.trading.pb.TradePb.indicator_pb.Builder, com.mock.trading.pb.TradePb.indicator_pbOrBuilder> 
          getIndicatorFieldBuilder() {
        if (indicatorBuilder_ == null) {
          indicatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mock.trading.pb.TradePb.indicator_pb, com.mock.trading.pb.TradePb.indicator_pb.Builder, com.mock.trading.pb.TradePb.indicator_pbOrBuilder>(
                  indicator_,
                  getParentForChildren(),
                  isClean());
          indicator_ = null;
        }
        return indicatorBuilder_;
      }
      
      // optional double price = 8;
      private double price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getPrice() {
        return price_;
      }
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000080;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0D;
        onChanged();
        return this;
      }
      
      // repeated .com.elvenland.trading.pb.bar_pb bars = 9;
      private java.util.List<com.mock.trading.pb.TradePb.bar_pb> bars_ =
        java.util.Collections.emptyList();
      private void ensureBarsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          bars_ = new java.util.ArrayList<com.mock.trading.pb.TradePb.bar_pb>(bars_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mock.trading.pb.TradePb.bar_pb, com.mock.trading.pb.TradePb.bar_pb.Builder, com.mock.trading.pb.TradePb.bar_pbOrBuilder> barsBuilder_;
      
      public java.util.List<com.mock.trading.pb.TradePb.bar_pb> getBarsList() {
        if (barsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bars_);
        } else {
          return barsBuilder_.getMessageList();
        }
      }
      public int getBarsCount() {
        if (barsBuilder_ == null) {
          return bars_.size();
        } else {
          return barsBuilder_.getCount();
        }
      }
      public com.mock.trading.pb.TradePb.bar_pb getBars(int index) {
        if (barsBuilder_ == null) {
          return bars_.get(index);
        } else {
          return barsBuilder_.getMessage(index);
        }
      }
      public Builder setBars(
          int index, com.mock.trading.pb.TradePb.bar_pb value) {
        if (barsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBarsIsMutable();
          bars_.set(index, value);
          onChanged();
        } else {
          barsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBars(
          int index, com.mock.trading.pb.TradePb.bar_pb.Builder builderForValue) {
        if (barsBuilder_ == null) {
          ensureBarsIsMutable();
          bars_.set(index, builderForValue.build());
          onChanged();
        } else {
          barsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBars(com.mock.trading.pb.TradePb.bar_pb value) {
        if (barsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBarsIsMutable();
          bars_.add(value);
          onChanged();
        } else {
          barsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBars(
          int index, com.mock.trading.pb.TradePb.bar_pb value) {
        if (barsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBarsIsMutable();
          bars_.add(index, value);
          onChanged();
        } else {
          barsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBars(
          com.mock.trading.pb.TradePb.bar_pb.Builder builderForValue) {
        if (barsBuilder_ == null) {
          ensureBarsIsMutable();
          bars_.add(builderForValue.build());
          onChanged();
        } else {
          barsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBars(
          int index, com.mock.trading.pb.TradePb.bar_pb.Builder builderForValue) {
        if (barsBuilder_ == null) {
          ensureBarsIsMutable();
          bars_.add(index, builderForValue.build());
          onChanged();
        } else {
          barsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBars(
          java.lang.Iterable<? extends com.mock.trading.pb.TradePb.bar_pb> values) {
        if (barsBuilder_ == null) {
          ensureBarsIsMutable();
          super.addAll(values, bars_);
          onChanged();
        } else {
          barsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBars() {
        if (barsBuilder_ == null) {
          bars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          barsBuilder_.clear();
        }
        return this;
      }
      public Builder removeBars(int index) {
        if (barsBuilder_ == null) {
          ensureBarsIsMutable();
          bars_.remove(index);
          onChanged();
        } else {
          barsBuilder_.remove(index);
        }
        return this;
      }
      public com.mock.trading.pb.TradePb.bar_pb.Builder getBarsBuilder(
          int index) {
        return getBarsFieldBuilder().getBuilder(index);
      }
      public com.mock.trading.pb.TradePb.bar_pbOrBuilder getBarsOrBuilder(
          int index) {
        if (barsBuilder_ == null) {
          return bars_.get(index);  } else {
          return barsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.mock.trading.pb.TradePb.bar_pbOrBuilder> 
           getBarsOrBuilderList() {
        if (barsBuilder_ != null) {
          return barsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bars_);
        }
      }
      public com.mock.trading.pb.TradePb.bar_pb.Builder addBarsBuilder() {
        return getBarsFieldBuilder().addBuilder(
            com.mock.trading.pb.TradePb.bar_pb.getDefaultInstance());
      }
      public com.mock.trading.pb.TradePb.bar_pb.Builder addBarsBuilder(
          int index) {
        return getBarsFieldBuilder().addBuilder(
            index, com.mock.trading.pb.TradePb.bar_pb.getDefaultInstance());
      }
      public java.util.List<com.mock.trading.pb.TradePb.bar_pb.Builder> 
           getBarsBuilderList() {
        return getBarsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mock.trading.pb.TradePb.bar_pb, com.mock.trading.pb.TradePb.bar_pb.Builder, com.mock.trading.pb.TradePb.bar_pbOrBuilder> 
          getBarsFieldBuilder() {
        if (barsBuilder_ == null) {
          barsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mock.trading.pb.TradePb.bar_pb, com.mock.trading.pb.TradePb.bar_pb.Builder, com.mock.trading.pb.TradePb.bar_pbOrBuilder>(
                  bars_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          bars_ = null;
        }
        return barsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.strat_out_pb)
    }
    
    static {
      defaultInstance = new strat_out_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.strat_out_pb)
  }
  
  public interface eltrade_pbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 ts = 1;
    boolean hasTs();
    long getTs();
    
    // optional string orderid = 2;
    boolean hasOrderid();
    String getOrderid();
    
    // optional string account = 3;
    boolean hasAccount();
    String getAccount();
    
    // optional string side = 4;
    boolean hasSide();
    String getSide();
    
    // optional double size = 5;
    boolean hasSize();
    double getSize();
    
    // optional string symbol = 6;
    boolean hasSymbol();
    String getSymbol();
    
    // optional string venue = 7;
    boolean hasVenue();
    String getVenue();
    
    // optional double price = 8;
    boolean hasPrice();
    double getPrice();
    
    // optional int32 position = 9;
    boolean hasPosition();
    int getPosition();
    
    // optional double pl = 10;
    boolean hasPl();
    double getPl();
    
    // optional double last_bar_close = 11;
    boolean hasLastBarClose();
    double getLastBarClose();
    
    // optional double last_bar_time = 12;
    boolean hasLastBarTime();
    double getLastBarTime();
    
    // optional int32 bar_range = 13;
    boolean hasBarRange();
    int getBarRange();
    
    // optional string permorderid = 14;
    boolean hasPermorderid();
    String getPermorderid();
    
    // optional string strategy = 15;
    boolean hasStrategy();
    String getStrategy();
    
    // optional string tif = 16;
    boolean hasTif();
    String getTif();
    
    // optional uint64 sessionid = 17;
    boolean hasSessionid();
    long getSessionid();
    
    // optional uint64 exec_time = 18;
    boolean hasExecTime();
    long getExecTime();
    
    // optional int32 exec_size = 19;
    boolean hasExecSize();
    int getExecSize();
    
    // optional double exec_price = 20;
    boolean hasExecPrice();
    double getExecPrice();
    
    // optional int32 exec_orderid = 21;
    boolean hasExecOrderid();
    int getExecOrderid();
    
    // optional string exit_orderid = 22;
    boolean hasExitOrderid();
    String getExitOrderid();
    
    // optional uint64 exit_order_time = 23;
    boolean hasExitOrderTime();
    long getExitOrderTime();
    
    // optional uint64 exit_exec_time = 24;
    boolean hasExitExecTime();
    long getExitExecTime();
    
    // optional double exit_price = 25;
    boolean hasExitPrice();
    double getExitPrice();
    
    // optional string exit_venue = 26;
    boolean hasExitVenue();
    String getExitVenue();
    
    // optional string stoploss_orderid = 27;
    boolean hasStoplossOrderid();
    String getStoplossOrderid();
    
    // optional double stoploss_price = 28;
    boolean hasStoplossPrice();
    double getStoplossPrice();
    
    // optional uint64 stoploss_exec_time = 29;
    boolean hasStoplossExecTime();
    long getStoplossExecTime();
    
    // optional uint64 stoploss_order_time = 30;
    boolean hasStoplossOrderTime();
    long getStoplossOrderTime();
    
    // optional string stoploss_venue = 31;
    boolean hasStoplossVenue();
    String getStoplossVenue();
  }
  public static final class eltrade_pb extends
      com.google.protobuf.GeneratedMessage
      implements eltrade_pbOrBuilder {
    // Use eltrade_pb.newBuilder() to construct.
    private eltrade_pb(Builder builder) {
      super(builder);
    }
    private eltrade_pb(boolean noInit) {}
    
    private static final eltrade_pb defaultInstance;
    public static eltrade_pb getDefaultInstance() {
      return defaultInstance;
    }
    
    public eltrade_pb getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_eltrade_pb_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_eltrade_pb_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 ts = 1;
    public static final int TS_FIELD_NUMBER = 1;
    private long ts_;
    public boolean hasTs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTs() {
      return ts_;
    }
    
    // optional string orderid = 2;
    public static final int ORDERID_FIELD_NUMBER = 2;
    private java.lang.Object orderid_;
    public boolean hasOrderid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getOrderid() {
      java.lang.Object ref = orderid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          orderid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOrderidBytes() {
      java.lang.Object ref = orderid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        orderid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string account = 3;
    public static final int ACCOUNT_FIELD_NUMBER = 3;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string side = 4;
    public static final int SIDE_FIELD_NUMBER = 4;
    private java.lang.Object side_;
    public boolean hasSide() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getSide() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          side_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSideBytes() {
      java.lang.Object ref = side_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        side_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double size = 5;
    public static final int SIZE_FIELD_NUMBER = 5;
    private double size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getSize() {
      return size_;
    }
    
    // optional string symbol = 6;
    public static final int SYMBOL_FIELD_NUMBER = 6;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string venue = 7;
    public static final int VENUE_FIELD_NUMBER = 7;
    private java.lang.Object venue_;
    public boolean hasVenue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getVenue() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          venue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getVenueBytes() {
      java.lang.Object ref = venue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        venue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double price = 8;
    public static final int PRICE_FIELD_NUMBER = 8;
    private double price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getPrice() {
      return price_;
    }
    
    // optional int32 position = 9;
    public static final int POSITION_FIELD_NUMBER = 9;
    private int position_;
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPosition() {
      return position_;
    }
    
    // optional double pl = 10;
    public static final int PL_FIELD_NUMBER = 10;
    private double pl_;
    public boolean hasPl() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public double getPl() {
      return pl_;
    }
    
    // optional double last_bar_close = 11;
    public static final int LAST_BAR_CLOSE_FIELD_NUMBER = 11;
    private double lastBarClose_;
    public boolean hasLastBarClose() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public double getLastBarClose() {
      return lastBarClose_;
    }
    
    // optional double last_bar_time = 12;
    public static final int LAST_BAR_TIME_FIELD_NUMBER = 12;
    private double lastBarTime_;
    public boolean hasLastBarTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getLastBarTime() {
      return lastBarTime_;
    }
    
    // optional int32 bar_range = 13;
    public static final int BAR_RANGE_FIELD_NUMBER = 13;
    private int barRange_;
    public boolean hasBarRange() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getBarRange() {
      return barRange_;
    }
    
    // optional string permorderid = 14;
    public static final int PERMORDERID_FIELD_NUMBER = 14;
    private java.lang.Object permorderid_;
    public boolean hasPermorderid() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getPermorderid() {
      java.lang.Object ref = permorderid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          permorderid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPermorderidBytes() {
      java.lang.Object ref = permorderid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        permorderid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string strategy = 15;
    public static final int STRATEGY_FIELD_NUMBER = 15;
    private java.lang.Object strategy_;
    public boolean hasStrategy() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getStrategy() {
      java.lang.Object ref = strategy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strategy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrategyBytes() {
      java.lang.Object ref = strategy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strategy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string tif = 16;
    public static final int TIF_FIELD_NUMBER = 16;
    private java.lang.Object tif_;
    public boolean hasTif() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public String getTif() {
      java.lang.Object ref = tif_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tif_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTifBytes() {
      java.lang.Object ref = tif_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tif_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 sessionid = 17;
    public static final int SESSIONID_FIELD_NUMBER = 17;
    private long sessionid_;
    public boolean hasSessionid() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public long getSessionid() {
      return sessionid_;
    }
    
    // optional uint64 exec_time = 18;
    public static final int EXEC_TIME_FIELD_NUMBER = 18;
    private long execTime_;
    public boolean hasExecTime() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public long getExecTime() {
      return execTime_;
    }
    
    // optional int32 exec_size = 19;
    public static final int EXEC_SIZE_FIELD_NUMBER = 19;
    private int execSize_;
    public boolean hasExecSize() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getExecSize() {
      return execSize_;
    }
    
    // optional double exec_price = 20;
    public static final int EXEC_PRICE_FIELD_NUMBER = 20;
    private double execPrice_;
    public boolean hasExecPrice() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public double getExecPrice() {
      return execPrice_;
    }
    
    // optional int32 exec_orderid = 21;
    public static final int EXEC_ORDERID_FIELD_NUMBER = 21;
    private int execOrderid_;
    public boolean hasExecOrderid() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getExecOrderid() {
      return execOrderid_;
    }
    
    // optional string exit_orderid = 22;
    public static final int EXIT_ORDERID_FIELD_NUMBER = 22;
    private java.lang.Object exitOrderid_;
    public boolean hasExitOrderid() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public String getExitOrderid() {
      java.lang.Object ref = exitOrderid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exitOrderid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExitOrderidBytes() {
      java.lang.Object ref = exitOrderid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exitOrderid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 exit_order_time = 23;
    public static final int EXIT_ORDER_TIME_FIELD_NUMBER = 23;
    private long exitOrderTime_;
    public boolean hasExitOrderTime() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public long getExitOrderTime() {
      return exitOrderTime_;
    }
    
    // optional uint64 exit_exec_time = 24;
    public static final int EXIT_EXEC_TIME_FIELD_NUMBER = 24;
    private long exitExecTime_;
    public boolean hasExitExecTime() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public long getExitExecTime() {
      return exitExecTime_;
    }
    
    // optional double exit_price = 25;
    public static final int EXIT_PRICE_FIELD_NUMBER = 25;
    private double exitPrice_;
    public boolean hasExitPrice() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public double getExitPrice() {
      return exitPrice_;
    }
    
    // optional string exit_venue = 26;
    public static final int EXIT_VENUE_FIELD_NUMBER = 26;
    private java.lang.Object exitVenue_;
    public boolean hasExitVenue() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public String getExitVenue() {
      java.lang.Object ref = exitVenue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exitVenue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExitVenueBytes() {
      java.lang.Object ref = exitVenue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exitVenue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string stoploss_orderid = 27;
    public static final int STOPLOSS_ORDERID_FIELD_NUMBER = 27;
    private java.lang.Object stoplossOrderid_;
    public boolean hasStoplossOrderid() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public String getStoplossOrderid() {
      java.lang.Object ref = stoplossOrderid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          stoplossOrderid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStoplossOrderidBytes() {
      java.lang.Object ref = stoplossOrderid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        stoplossOrderid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double stoploss_price = 28;
    public static final int STOPLOSS_PRICE_FIELD_NUMBER = 28;
    private double stoplossPrice_;
    public boolean hasStoplossPrice() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public double getStoplossPrice() {
      return stoplossPrice_;
    }
    
    // optional uint64 stoploss_exec_time = 29;
    public static final int STOPLOSS_EXEC_TIME_FIELD_NUMBER = 29;
    private long stoplossExecTime_;
    public boolean hasStoplossExecTime() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public long getStoplossExecTime() {
      return stoplossExecTime_;
    }
    
    // optional uint64 stoploss_order_time = 30;
    public static final int STOPLOSS_ORDER_TIME_FIELD_NUMBER = 30;
    private long stoplossOrderTime_;
    public boolean hasStoplossOrderTime() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public long getStoplossOrderTime() {
      return stoplossOrderTime_;
    }
    
    // optional string stoploss_venue = 31;
    public static final int STOPLOSS_VENUE_FIELD_NUMBER = 31;
    private java.lang.Object stoplossVenue_;
    public boolean hasStoplossVenue() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public String getStoplossVenue() {
      java.lang.Object ref = stoplossVenue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          stoplossVenue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStoplossVenueBytes() {
      java.lang.Object ref = stoplossVenue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        stoplossVenue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      ts_ = 0L;
      orderid_ = "";
      account_ = "";
      side_ = "";
      size_ = 0D;
      symbol_ = "";
      venue_ = "";
      price_ = 0D;
      position_ = 0;
      pl_ = 0D;
      lastBarClose_ = 0D;
      lastBarTime_ = 0D;
      barRange_ = 0;
      permorderid_ = "";
      strategy_ = "";
      tif_ = "";
      sessionid_ = 0L;
      execTime_ = 0L;
      execSize_ = 0;
      execPrice_ = 0D;
      execOrderid_ = 0;
      exitOrderid_ = "";
      exitOrderTime_ = 0L;
      exitExecTime_ = 0L;
      exitPrice_ = 0D;
      exitVenue_ = "";
      stoplossOrderid_ = "";
      stoplossPrice_ = 0D;
      stoplossExecTime_ = 0L;
      stoplossOrderTime_ = 0L;
      stoplossVenue_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, ts_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOrderidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAccountBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSideBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getVenueBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, price_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, position_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, pl_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, lastBarClose_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, lastBarTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, barRange_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getPermorderidBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getStrategyBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getTifBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt64(17, sessionid_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt64(18, execTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, execSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, execPrice_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, execOrderid_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(22, getExitOrderidBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt64(23, exitOrderTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt64(24, exitExecTime_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeDouble(25, exitPrice_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBytes(26, getExitVenueBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBytes(27, getStoplossOrderidBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeDouble(28, stoplossPrice_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt64(29, stoplossExecTime_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt64(30, stoplossOrderTime_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeBytes(31, getStoplossVenueBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, ts_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOrderidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAccountBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSideBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getVenueBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, price_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, position_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, pl_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, lastBarClose_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, lastBarTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, barRange_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getPermorderidBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getStrategyBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getTifBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, sessionid_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, execTime_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, execSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, execPrice_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, execOrderid_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getExitOrderidBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(23, exitOrderTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(24, exitExecTime_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, exitPrice_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(26, getExitVenueBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(27, getStoplossOrderidBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, stoplossPrice_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(29, stoplossExecTime_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(30, stoplossOrderTime_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(31, getStoplossVenueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.mock.trading.pb.TradePb.eltrade_pb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mock.trading.pb.TradePb.eltrade_pb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mock.trading.pb.TradePb.eltrade_pbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_eltrade_pb_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mock.trading.pb.TradePb.internal_static_com_elvenland_trading_pb_eltrade_pb_fieldAccessorTable;
      }
      
      // Construct using com.elvenland.trading.pb.TradePb.eltrade_pb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ts_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        side_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        size_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        venue_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pl_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        lastBarClose_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        lastBarTime_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        barRange_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        permorderid_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        strategy_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        tif_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        sessionid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        execTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        execSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        execPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        execOrderid_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        exitOrderid_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        exitOrderTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        exitExecTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        exitPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x01000000);
        exitVenue_ = "";
        bitField0_ = (bitField0_ & ~0x02000000);
        stoplossOrderid_ = "";
        bitField0_ = (bitField0_ & ~0x04000000);
        stoplossPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x08000000);
        stoplossExecTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x10000000);
        stoplossOrderTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x20000000);
        stoplossVenue_ = "";
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mock.trading.pb.TradePb.eltrade_pb.getDescriptor();
      }
      
      public com.mock.trading.pb.TradePb.eltrade_pb getDefaultInstanceForType() {
        return com.mock.trading.pb.TradePb.eltrade_pb.getDefaultInstance();
      }
      
      public com.mock.trading.pb.TradePb.eltrade_pb build() {
        com.mock.trading.pb.TradePb.eltrade_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.mock.trading.pb.TradePb.eltrade_pb buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.mock.trading.pb.TradePb.eltrade_pb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.mock.trading.pb.TradePb.eltrade_pb buildPartial() {
        com.mock.trading.pb.TradePb.eltrade_pb result = new com.mock.trading.pb.TradePb.eltrade_pb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ts_ = ts_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderid_ = orderid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.venue_ = venue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pl_ = pl_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lastBarClose_ = lastBarClose_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.lastBarTime_ = lastBarTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.barRange_ = barRange_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.permorderid_ = permorderid_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.strategy_ = strategy_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tif_ = tif_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.sessionid_ = sessionid_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.execTime_ = execTime_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.execSize_ = execSize_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.execPrice_ = execPrice_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.execOrderid_ = execOrderid_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.exitOrderid_ = exitOrderid_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.exitOrderTime_ = exitOrderTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.exitExecTime_ = exitExecTime_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.exitPrice_ = exitPrice_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.exitVenue_ = exitVenue_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.stoplossOrderid_ = stoplossOrderid_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.stoplossPrice_ = stoplossPrice_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.stoplossExecTime_ = stoplossExecTime_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.stoplossOrderTime_ = stoplossOrderTime_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.stoplossVenue_ = stoplossVenue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mock.trading.pb.TradePb.eltrade_pb) {
          return mergeFrom((com.mock.trading.pb.TradePb.eltrade_pb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.mock.trading.pb.TradePb.eltrade_pb other) {
        if (other == com.mock.trading.pb.TradePb.eltrade_pb.getDefaultInstance()) return this;
        if (other.hasTs()) {
          setTs(other.getTs());
        }
        if (other.hasOrderid()) {
          setOrderid(other.getOrderid());
        }
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasVenue()) {
          setVenue(other.getVenue());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasPl()) {
          setPl(other.getPl());
        }
        if (other.hasLastBarClose()) {
          setLastBarClose(other.getLastBarClose());
        }
        if (other.hasLastBarTime()) {
          setLastBarTime(other.getLastBarTime());
        }
        if (other.hasBarRange()) {
          setBarRange(other.getBarRange());
        }
        if (other.hasPermorderid()) {
          setPermorderid(other.getPermorderid());
        }
        if (other.hasStrategy()) {
          setStrategy(other.getStrategy());
        }
        if (other.hasTif()) {
          setTif(other.getTif());
        }
        if (other.hasSessionid()) {
          setSessionid(other.getSessionid());
        }
        if (other.hasExecTime()) {
          setExecTime(other.getExecTime());
        }
        if (other.hasExecSize()) {
          setExecSize(other.getExecSize());
        }
        if (other.hasExecPrice()) {
          setExecPrice(other.getExecPrice());
        }
        if (other.hasExecOrderid()) {
          setExecOrderid(other.getExecOrderid());
        }
        if (other.hasExitOrderid()) {
          setExitOrderid(other.getExitOrderid());
        }
        if (other.hasExitOrderTime()) {
          setExitOrderTime(other.getExitOrderTime());
        }
        if (other.hasExitExecTime()) {
          setExitExecTime(other.getExitExecTime());
        }
        if (other.hasExitPrice()) {
          setExitPrice(other.getExitPrice());
        }
        if (other.hasExitVenue()) {
          setExitVenue(other.getExitVenue());
        }
        if (other.hasStoplossOrderid()) {
          setStoplossOrderid(other.getStoplossOrderid());
        }
        if (other.hasStoplossPrice()) {
          setStoplossPrice(other.getStoplossPrice());
        }
        if (other.hasStoplossExecTime()) {
          setStoplossExecTime(other.getStoplossExecTime());
        }
        if (other.hasStoplossOrderTime()) {
          setStoplossOrderTime(other.getStoplossOrderTime());
        }
        if (other.hasStoplossVenue()) {
          setStoplossVenue(other.getStoplossVenue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ts_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              orderid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              account_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              side_ = input.readBytes();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              size_ = input.readDouble();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              symbol_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              venue_ = input.readBytes();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              price_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              position_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              pl_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              lastBarClose_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              lastBarTime_ = input.readDouble();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              barRange_ = input.readInt32();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              permorderid_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              strategy_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              tif_ = input.readBytes();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              sessionid_ = input.readUInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              execTime_ = input.readUInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              execSize_ = input.readInt32();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              execPrice_ = input.readDouble();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              execOrderid_ = input.readInt32();
              break;
            }
            case 178: {
              bitField0_ |= 0x00200000;
              exitOrderid_ = input.readBytes();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              exitOrderTime_ = input.readUInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              exitExecTime_ = input.readUInt64();
              break;
            }
            case 201: {
              bitField0_ |= 0x01000000;
              exitPrice_ = input.readDouble();
              break;
            }
            case 210: {
              bitField0_ |= 0x02000000;
              exitVenue_ = input.readBytes();
              break;
            }
            case 218: {
              bitField0_ |= 0x04000000;
              stoplossOrderid_ = input.readBytes();
              break;
            }
            case 225: {
              bitField0_ |= 0x08000000;
              stoplossPrice_ = input.readDouble();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              stoplossExecTime_ = input.readUInt64();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              stoplossOrderTime_ = input.readUInt64();
              break;
            }
            case 250: {
              bitField0_ |= 0x40000000;
              stoplossVenue_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 ts = 1;
      private long ts_ ;
      public boolean hasTs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTs() {
        return ts_;
      }
      public Builder setTs(long value) {
        bitField0_ |= 0x00000001;
        ts_ = value;
        onChanged();
        return this;
      }
      public Builder clearTs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ts_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string orderid = 2;
      private java.lang.Object orderid_ = "";
      public boolean hasOrderid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getOrderid() {
        java.lang.Object ref = orderid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          orderid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOrderid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderid_ = getDefaultInstance().getOrderid();
        onChanged();
        return this;
      }
      void setOrderid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        orderid_ = value;
        onChanged();
      }
      
      // optional string account = 3;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        account_ = value;
        onChanged();
      }
      
      // optional string side = 4;
      private java.lang.Object side_ = "";
      public boolean hasSide() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getSide() {
        java.lang.Object ref = side_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          side_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSide(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        side_ = value;
        onChanged();
        return this;
      }
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000008);
        side_ = getDefaultInstance().getSide();
        onChanged();
        return this;
      }
      void setSide(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        side_ = value;
        onChanged();
      }
      
      // optional double size = 5;
      private double size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getSize() {
        return size_;
      }
      public Builder setSize(double value) {
        bitField0_ |= 0x00000010;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        size_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string symbol = 6;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000020);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        symbol_ = value;
        onChanged();
      }
      
      // optional string venue = 7;
      private java.lang.Object venue_ = "";
      public boolean hasVenue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getVenue() {
        java.lang.Object ref = venue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          venue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVenue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        venue_ = value;
        onChanged();
        return this;
      }
      public Builder clearVenue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        venue_ = getDefaultInstance().getVenue();
        onChanged();
        return this;
      }
      void setVenue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        venue_ = value;
        onChanged();
      }
      
      // optional double price = 8;
      private double price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getPrice() {
        return price_;
      }
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000080;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 position = 9;
      private int position_ ;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getPosition() {
        return position_;
      }
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000100;
        position_ = value;
        onChanged();
        return this;
      }
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000100);
        position_ = 0;
        onChanged();
        return this;
      }
      
      // optional double pl = 10;
      private double pl_ ;
      public boolean hasPl() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public double getPl() {
        return pl_;
      }
      public Builder setPl(double value) {
        bitField0_ |= 0x00000200;
        pl_ = value;
        onChanged();
        return this;
      }
      public Builder clearPl() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pl_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double last_bar_close = 11;
      private double lastBarClose_ ;
      public boolean hasLastBarClose() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public double getLastBarClose() {
        return lastBarClose_;
      }
      public Builder setLastBarClose(double value) {
        bitField0_ |= 0x00000400;
        lastBarClose_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastBarClose() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lastBarClose_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double last_bar_time = 12;
      private double lastBarTime_ ;
      public boolean hasLastBarTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getLastBarTime() {
        return lastBarTime_;
      }
      public Builder setLastBarTime(double value) {
        bitField0_ |= 0x00000800;
        lastBarTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastBarTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lastBarTime_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 bar_range = 13;
      private int barRange_ ;
      public boolean hasBarRange() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getBarRange() {
        return barRange_;
      }
      public Builder setBarRange(int value) {
        bitField0_ |= 0x00001000;
        barRange_ = value;
        onChanged();
        return this;
      }
      public Builder clearBarRange() {
        bitField0_ = (bitField0_ & ~0x00001000);
        barRange_ = 0;
        onChanged();
        return this;
      }
      
      // optional string permorderid = 14;
      private java.lang.Object permorderid_ = "";
      public boolean hasPermorderid() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getPermorderid() {
        java.lang.Object ref = permorderid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          permorderid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPermorderid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        permorderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearPermorderid() {
        bitField0_ = (bitField0_ & ~0x00002000);
        permorderid_ = getDefaultInstance().getPermorderid();
        onChanged();
        return this;
      }
      void setPermorderid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        permorderid_ = value;
        onChanged();
      }
      
      // optional string strategy = 15;
      private java.lang.Object strategy_ = "";
      public boolean hasStrategy() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getStrategy() {
        java.lang.Object ref = strategy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strategy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrategy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        strategy_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrategy() {
        bitField0_ = (bitField0_ & ~0x00004000);
        strategy_ = getDefaultInstance().getStrategy();
        onChanged();
        return this;
      }
      void setStrategy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        strategy_ = value;
        onChanged();
      }
      
      // optional string tif = 16;
      private java.lang.Object tif_ = "";
      public boolean hasTif() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public String getTif() {
        java.lang.Object ref = tif_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tif_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTif(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tif_ = value;
        onChanged();
        return this;
      }
      public Builder clearTif() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tif_ = getDefaultInstance().getTif();
        onChanged();
        return this;
      }
      void setTif(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00008000;
        tif_ = value;
        onChanged();
      }
      
      // optional uint64 sessionid = 17;
      private long sessionid_ ;
      public boolean hasSessionid() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public long getSessionid() {
        return sessionid_;
      }
      public Builder setSessionid(long value) {
        bitField0_ |= 0x00010000;
        sessionid_ = value;
        onChanged();
        return this;
      }
      public Builder clearSessionid() {
        bitField0_ = (bitField0_ & ~0x00010000);
        sessionid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 exec_time = 18;
      private long execTime_ ;
      public boolean hasExecTime() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public long getExecTime() {
        return execTime_;
      }
      public Builder setExecTime(long value) {
        bitField0_ |= 0x00020000;
        execTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecTime() {
        bitField0_ = (bitField0_ & ~0x00020000);
        execTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 exec_size = 19;
      private int execSize_ ;
      public boolean hasExecSize() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getExecSize() {
        return execSize_;
      }
      public Builder setExecSize(int value) {
        bitField0_ |= 0x00040000;
        execSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecSize() {
        bitField0_ = (bitField0_ & ~0x00040000);
        execSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional double exec_price = 20;
      private double execPrice_ ;
      public boolean hasExecPrice() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public double getExecPrice() {
        return execPrice_;
      }
      public Builder setExecPrice(double value) {
        bitField0_ |= 0x00080000;
        execPrice_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecPrice() {
        bitField0_ = (bitField0_ & ~0x00080000);
        execPrice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 exec_orderid = 21;
      private int execOrderid_ ;
      public boolean hasExecOrderid() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getExecOrderid() {
        return execOrderid_;
      }
      public Builder setExecOrderid(int value) {
        bitField0_ |= 0x00100000;
        execOrderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecOrderid() {
        bitField0_ = (bitField0_ & ~0x00100000);
        execOrderid_ = 0;
        onChanged();
        return this;
      }
      
      // optional string exit_orderid = 22;
      private java.lang.Object exitOrderid_ = "";
      public boolean hasExitOrderid() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public String getExitOrderid() {
        java.lang.Object ref = exitOrderid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exitOrderid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExitOrderid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        exitOrderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitOrderid() {
        bitField0_ = (bitField0_ & ~0x00200000);
        exitOrderid_ = getDefaultInstance().getExitOrderid();
        onChanged();
        return this;
      }
      void setExitOrderid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00200000;
        exitOrderid_ = value;
        onChanged();
      }
      
      // optional uint64 exit_order_time = 23;
      private long exitOrderTime_ ;
      public boolean hasExitOrderTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public long getExitOrderTime() {
        return exitOrderTime_;
      }
      public Builder setExitOrderTime(long value) {
        bitField0_ |= 0x00400000;
        exitOrderTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitOrderTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        exitOrderTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 exit_exec_time = 24;
      private long exitExecTime_ ;
      public boolean hasExitExecTime() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public long getExitExecTime() {
        return exitExecTime_;
      }
      public Builder setExitExecTime(long value) {
        bitField0_ |= 0x00800000;
        exitExecTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitExecTime() {
        bitField0_ = (bitField0_ & ~0x00800000);
        exitExecTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional double exit_price = 25;
      private double exitPrice_ ;
      public boolean hasExitPrice() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public double getExitPrice() {
        return exitPrice_;
      }
      public Builder setExitPrice(double value) {
        bitField0_ |= 0x01000000;
        exitPrice_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitPrice() {
        bitField0_ = (bitField0_ & ~0x01000000);
        exitPrice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional string exit_venue = 26;
      private java.lang.Object exitVenue_ = "";
      public boolean hasExitVenue() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public String getExitVenue() {
        java.lang.Object ref = exitVenue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exitVenue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExitVenue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        exitVenue_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitVenue() {
        bitField0_ = (bitField0_ & ~0x02000000);
        exitVenue_ = getDefaultInstance().getExitVenue();
        onChanged();
        return this;
      }
      void setExitVenue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x02000000;
        exitVenue_ = value;
        onChanged();
      }
      
      // optional string stoploss_orderid = 27;
      private java.lang.Object stoplossOrderid_ = "";
      public boolean hasStoplossOrderid() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public String getStoplossOrderid() {
        java.lang.Object ref = stoplossOrderid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          stoplossOrderid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStoplossOrderid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x04000000;
        stoplossOrderid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoplossOrderid() {
        bitField0_ = (bitField0_ & ~0x04000000);
        stoplossOrderid_ = getDefaultInstance().getStoplossOrderid();
        onChanged();
        return this;
      }
      void setStoplossOrderid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x04000000;
        stoplossOrderid_ = value;
        onChanged();
      }
      
      // optional double stoploss_price = 28;
      private double stoplossPrice_ ;
      public boolean hasStoplossPrice() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public double getStoplossPrice() {
        return stoplossPrice_;
      }
      public Builder setStoplossPrice(double value) {
        bitField0_ |= 0x08000000;
        stoplossPrice_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoplossPrice() {
        bitField0_ = (bitField0_ & ~0x08000000);
        stoplossPrice_ = 0D;
        onChanged();
        return this;
      }
      
      // optional uint64 stoploss_exec_time = 29;
      private long stoplossExecTime_ ;
      public boolean hasStoplossExecTime() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public long getStoplossExecTime() {
        return stoplossExecTime_;
      }
      public Builder setStoplossExecTime(long value) {
        bitField0_ |= 0x10000000;
        stoplossExecTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoplossExecTime() {
        bitField0_ = (bitField0_ & ~0x10000000);
        stoplossExecTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 stoploss_order_time = 30;
      private long stoplossOrderTime_ ;
      public boolean hasStoplossOrderTime() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public long getStoplossOrderTime() {
        return stoplossOrderTime_;
      }
      public Builder setStoplossOrderTime(long value) {
        bitField0_ |= 0x20000000;
        stoplossOrderTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoplossOrderTime() {
        bitField0_ = (bitField0_ & ~0x20000000);
        stoplossOrderTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string stoploss_venue = 31;
      private java.lang.Object stoplossVenue_ = "";
      public boolean hasStoplossVenue() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public String getStoplossVenue() {
        java.lang.Object ref = stoplossVenue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          stoplossVenue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStoplossVenue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x40000000;
        stoplossVenue_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoplossVenue() {
        bitField0_ = (bitField0_ & ~0x40000000);
        stoplossVenue_ = getDefaultInstance().getStoplossVenue();
        onChanged();
        return this;
      }
      void setStoplossVenue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x40000000;
        stoplossVenue_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.elvenland.trading.pb.eltrade_pb)
    }
    
    static {
      defaultInstance = new eltrade_pb(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.elvenland.trading.pb.eltrade_pb)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_trade_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_trade_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_cancel_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_cancel_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_order_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_order_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_tick_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_tick_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_bar_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_bar_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_security_info_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_security_info_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_daily_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_daily_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_macd_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_macd_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_indicator_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_indicator_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_strat_out_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_strat_out_pb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_elvenland_trading_pb_eltrade_pb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_elvenland_trading_pb_eltrade_pb_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016trade_pb.proto\022\030com.elvenland.trading." +
      "pb\"\342\001\n\010trade_pb\022\n\n\002ts\030\001 \001(\004\022\017\n\007orderid\030\002" +
      " \001(\t\022\017\n\007account\030\003 \001(\t\022\014\n\004side\030\004 \001(\t\022\014\n\004s" +
      "ize\030\005 \001(\005\022\016\n\006symbol\030\006 \001(\t\022\r\n\005venue\030\007 \001(\t" +
      "\022\r\n\005price\030\010 \001(\001\022\020\n\010position\030\t \001(\005\022\n\n\002pl\030" +
      "\n \001(\001\022\013\n\003seq\030\013 \001(\004\022\020\n\010avgprice\030\014 \001(\001\022\017\n\007" +
      "fillqty\030\r \001(\005\022\020\n\010leaveqty\030\016 \001(\005\"\204\001\n\tcanc" +
      "el_pb\022\013\n\003seq\030\001 \001(\004\022\017\n\007orderid\030\002 \001(\004\022\020\n\010o" +
      "rderref\030\003 \001(\t\022\n\n\002ts\030\004 \001(\004\022\017\n\007account\030\005 \001" +
      "(\t\022\014\n\004side\030\006 \001(\t\022\014\n\004size\030\007 \001(\r\022\016\n\006symbol",
      "\030\010 \001(\t\"\340\001\n\010order_pb\022\013\n\003seq\030\001 \001(\004\022\017\n\007orde" +
      "rid\030\002 \001(\004\022\020\n\010orderref\030\003 \001(\t\022\n\n\002ts\030\004 \001(\004\022" +
      "\016\n\006symbol\030\005 \001(\t\022\017\n\007account\030\006 \001(\t\022\014\n\004side" +
      "\030\007 \001(\t\022\014\n\004size\030\010 \001(\r\022\r\n\005venue\030\t \001(\t\022\r\n\005p" +
      "rice\030\n \001(\001\022\020\n\010locateid\030\013 \001(\t\022\014\n\004type\030\014 \001" +
      "(\t\022\020\n\010stoprice\030\r \001(\001\022\013\n\003tif\030\016 \001(\t\"\240\001\n\007ti" +
      "ck_pb\022\016\n\006symbol\030\001 \001(\t\022\r\n\005index\030\002 \001(\r\022\n\n\002" +
      "ts\030\003 \001(\004\022\014\n\004type\030\004 \001(\t\022\013\n\003bid\030\005 \001(\002\022\013\n\003a" +
      "sk\030\006 \001(\002\022\017\n\007bidsize\030\007 \001(\r\022\017\n\007asksize\030\010 \001" +
      "(\r\022\020\n\010exchange\030\t \001(\t\022\016\n\006change\030\n \001(\t\"y\n\006",
      "bar_pb\022\016\n\006symbol\030\001 \001(\t\022\n\n\002ts\030\002 \001(\004\022\014\n\004op" +
      "en\030\003 \001(\001\022\014\n\004high\030\004 \001(\001\022\013\n\003low\030\005 \001(\001\022\r\n\005c" +
      "lose\030\006 \001(\001\022\016\n\006volume\030\007 \001(\r\022\013\n\003sec\030\010 \001(\005\"" +
      "\351\001\n\020security_info_pb\022\016\n\006symbol\030\001 \001(\t\022\030\n\020" +
      "avg_daily_volume\030\002 \001(\r\022\022\n\nmarket_cap\030\003 \001" +
      "(\t\022\023\n\013short_ratio\030\004 \001(\001\022\020\n\010year_low\030\005 \001(" +
      "\001\022\021\n\tyear_high\030\006 \001(\001\022\016\n\006shares\030\007 \001(\r\022\013\n\003" +
      "eps\030\010 \001(\001\022\024\n\014target_price\030\t \001(\001\022\n\n\002pe\030\n " +
      "\001(\001\022\020\n\010exchange\030\013 \001(\t\022\014\n\004date\030\014 \001(\r\"p\n\010d" +
      "aily_pb\022\016\n\006symbol\030\001 \001(\t\022\014\n\004date\030\002 \001(\r\022\014\n",
      "\004open\030\003 \001(\001\022\014\n\004high\030\004 \001(\001\022\013\n\003low\030\005 \001(\001\022\r" +
      "\n\005close\030\006 \001(\001\022\016\n\006volume\030\007 \001(\r\"x\n\007macd_pb" +
      "\022\014\n\004macd\030\001 \001(\001\022\016\n\006signal\030\002 \001(\001\022\020\n\010macdhi" +
      "st\030\003 \001(\001\022=\n\005cross\030\004 \001(\0162(.com.elvenland." +
      "trading.pb.macd_cross_pbe:\004none\"g\n\014indic" +
      "ator_pb\022/\n\004macd\030\001 \001(\0132!.com.elvenland.tr" +
      "ading.pb.macd_pb\022\013\n\003rsi\030\002 \001(\001\022\014\n\004rsi2\030\003 " +
      "\001(\001\022\013\n\003adx\030\004 \001(\001\"\227\002\n\014strat_out_pb\022\014\n\004nam" +
      "e\030\001 \001(\t\022\014\n\004time\030\002 \001(\004\022<\n\nmacd_cross\030\003 \001(" +
      "\0162(.com.elvenland.trading.pb.macd_cross_",
      "pbe\022\016\n\006rsi_up\030\004 \001(\001\022\020\n\010rsi_down\030\005 \001(\r\022\021\n" +
      "\tadx_limit\030\006 \001(\r\0229\n\tindicator\030\007 \001(\0132&.co" +
      "m.elvenland.trading.pb.indicator_pb\022\r\n\005p" +
      "rice\030\010 \001(\001\022.\n\004bars\030\t \003(\0132 .com.elvenland" +
      ".trading.pb.bar_pb\"\355\004\n\neltrade_pb\022\n\n\002ts\030" +
      "\001 \001(\004\022\017\n\007orderid\030\002 \001(\t\022\017\n\007account\030\003 \001(\t\022" +
      "\014\n\004side\030\004 \001(\t\022\014\n\004size\030\005 \001(\001\022\016\n\006symbol\030\006 " +
      "\001(\t\022\r\n\005venue\030\007 \001(\t\022\r\n\005price\030\010 \001(\001\022\020\n\010pos" +
      "ition\030\t \001(\005\022\n\n\002pl\030\n \001(\001\022\026\n\016last_bar_clos" +
      "e\030\013 \001(\001\022\025\n\rlast_bar_time\030\014 \001(\001\022\021\n\tbar_ra",
      "nge\030\r \001(\005\022\023\n\013permorderid\030\016 \001(\t\022\020\n\010strate" +
      "gy\030\017 \001(\t\022\013\n\003tif\030\020 \001(\t\022\021\n\tsessionid\030\021 \001(\004" +
      "\022\021\n\texec_time\030\022 \001(\004\022\021\n\texec_size\030\023 \001(\005\022\022" +
      "\n\nexec_price\030\024 \001(\001\022\024\n\014exec_orderid\030\025 \001(\005" +
      "\022\024\n\014exit_orderid\030\026 \001(\t\022\027\n\017exit_order_tim" +
      "e\030\027 \001(\004\022\026\n\016exit_exec_time\030\030 \001(\004\022\022\n\nexit_" +
      "price\030\031 \001(\001\022\022\n\nexit_venue\030\032 \001(\t\022\030\n\020stopl" +
      "oss_orderid\030\033 \001(\t\022\026\n\016stoploss_price\030\034 \001(" +
      "\001\022\032\n\022stoploss_exec_time\030\035 \001(\004\022\033\n\023stoplos" +
      "s_order_time\030\036 \001(\004\022\026\n\016stoploss_venue\030\037 \001",
      "(\t*L\n\016macd_cross_pbe\022\017\n\013cross_above\020\001\022\017\n" +
      "\013cross_below\020\002\022\016\n\ncross_both\020\003\022\010\n\004none\020\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_elvenland_trading_pb_trade_pb_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_elvenland_trading_pb_trade_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_trade_pb_descriptor,
              new java.lang.String[] { "Ts", "Orderid", "Account", "Side", "Size", "Symbol", "Venue", "Price", "Position", "Pl", "Seq", "Avgprice", "Fillqty", "Leaveqty", },
              com.mock.trading.pb.TradePb.trade_pb.class,
              com.mock.trading.pb.TradePb.trade_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_cancel_pb_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_elvenland_trading_pb_cancel_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_cancel_pb_descriptor,
              new java.lang.String[] { "Seq", "Orderid", "Orderref", "Ts", "Account", "Side", "Size", "Symbol", },
              com.mock.trading.pb.TradePb.cancel_pb.class,
              com.mock.trading.pb.TradePb.cancel_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_order_pb_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_elvenland_trading_pb_order_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_order_pb_descriptor,
              new java.lang.String[] { "Seq", "Orderid", "Orderref", "Ts", "Symbol", "Account", "Side", "Size", "Venue", "Price", "Locateid", "Type", "Stoprice", "Tif", },
              com.mock.trading.pb.TradePb.order_pb.class,
              com.mock.trading.pb.TradePb.order_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_tick_pb_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_elvenland_trading_pb_tick_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_tick_pb_descriptor,
              new java.lang.String[] { "Symbol", "Index", "Ts", "Type", "Bid", "Ask", "Bidsize", "Asksize", "Exchange", "Change", },
              com.mock.trading.pb.TradePb.tick_pb.class,
              com.mock.trading.pb.TradePb.tick_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_bar_pb_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_elvenland_trading_pb_bar_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_bar_pb_descriptor,
              new java.lang.String[] { "Symbol", "Ts", "Open", "High", "Low", "Close", "Volume", "Sec", },
              com.mock.trading.pb.TradePb.bar_pb.class,
              com.mock.trading.pb.TradePb.bar_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_security_info_pb_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_elvenland_trading_pb_security_info_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_security_info_pb_descriptor,
              new java.lang.String[] { "Symbol", "AvgDailyVolume", "MarketCap", "ShortRatio", "YearLow", "YearHigh", "Shares", "Eps", "TargetPrice", "Pe", "Exchange", "Date", },
              com.mock.trading.pb.TradePb.security_info_pb.class,
              com.mock.trading.pb.TradePb.security_info_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_daily_pb_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_elvenland_trading_pb_daily_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_daily_pb_descriptor,
              new java.lang.String[] { "Symbol", "Date", "Open", "High", "Low", "Close", "Volume", },
              com.mock.trading.pb.TradePb.daily_pb.class,
              com.mock.trading.pb.TradePb.daily_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_macd_pb_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_elvenland_trading_pb_macd_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_macd_pb_descriptor,
              new java.lang.String[] { "Macd", "Signal", "Macdhist", "Cross", },
              com.mock.trading.pb.TradePb.macd_pb.class,
              com.mock.trading.pb.TradePb.macd_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_indicator_pb_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_elvenland_trading_pb_indicator_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_indicator_pb_descriptor,
              new java.lang.String[] { "Macd", "Rsi", "Rsi2", "Adx", },
              com.mock.trading.pb.TradePb.indicator_pb.class,
              com.mock.trading.pb.TradePb.indicator_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_strat_out_pb_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_elvenland_trading_pb_strat_out_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_strat_out_pb_descriptor,
              new java.lang.String[] { "Name", "Time", "MacdCross", "RsiUp", "RsiDown", "AdxLimit", "Indicator", "Price", "Bars", },
              com.mock.trading.pb.TradePb.strat_out_pb.class,
              com.mock.trading.pb.TradePb.strat_out_pb.Builder.class);
          internal_static_com_elvenland_trading_pb_eltrade_pb_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_elvenland_trading_pb_eltrade_pb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_elvenland_trading_pb_eltrade_pb_descriptor,
              new java.lang.String[] { "Ts", "Orderid", "Account", "Side", "Size", "Symbol", "Venue", "Price", "Position", "Pl", "LastBarClose", "LastBarTime", "BarRange", "Permorderid", "Strategy", "Tif", "Sessionid", "ExecTime", "ExecSize", "ExecPrice", "ExecOrderid", "ExitOrderid", "ExitOrderTime", "ExitExecTime", "ExitPrice", "ExitVenue", "StoplossOrderid", "StoplossPrice", "StoplossExecTime", "StoplossOrderTime", "StoplossVenue", },
              com.mock.trading.pb.TradePb.eltrade_pb.class,
              com.mock.trading.pb.TradePb.eltrade_pb.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
